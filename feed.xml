<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="https://www.danielplayfaircal.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://www.danielplayfaircal.com/" rel="alternate" type="text/html" /><updated>2021-02-21T16:55:21+11:00</updated><id>https://www.danielplayfaircal.com/feed.xml</id><title type="html">Daniel Playfair Cal’s Blog</title><subtitle>Rage, rage against the dying of the light</subtitle><entry><title type="html">Making a new desk (part 1): Choosing a frame</title><link href="https://www.danielplayfaircal.com/blogging/2021/02/20/new-desk-part-1-buying-a-frame.html" rel="alternate" type="text/html" title="Making a new desk (part 1): Choosing a frame" /><published>2021-02-20T00:10:00+11:00</published><updated>2021-02-20T00:10:00+11:00</updated><id>https://www.danielplayfaircal.com/blogging/2021/02/20/new-desk-part-1-buying-a-frame</id><content type="html" xml:base="https://www.danielplayfaircal.com/blogging/2021/02/20/new-desk-part-1-buying-a-frame.html">&lt;p&gt;Like many people I spend a really huge amount of time working at a desk, so I think its important that my desk setup is comfortable and generally induces positive feelings. Until recently I was using a desk I found at a second hand store.&lt;/p&gt;

&lt;p&gt;This desk served me well for many years. More recently though, I started to experience pain in various places and I realised that it was caused by sitting at my desk. Some of this pain was in my wrist and hands, and this I solved by changing my keyboard and mouse. But some of it was in my back and legs. I guessed that this was related to the slouchy posture that I tended to fall into when working at my desk. Although I tried, I struggled to remain seated with my back straight and feet flat on the floor for any length of time.&lt;/p&gt;

&lt;p&gt;So I decided to build myself a new desk. In this first part, I’ll write about choosing the frame, and in subsequent parts I’ll write about building the tabletop.&lt;/p&gt;

&lt;h2 id=&quot;the-convention-is-wrong&quot;&gt;The convention is wrong&lt;/h2&gt;

&lt;p&gt;There seems to be lots of agreement that a good seating position involves the following:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;feet flat on the floor&lt;/li&gt;
  &lt;li&gt;shins vertical&lt;/li&gt;
  &lt;li&gt;thighs horizontal, resting on a chair&lt;/li&gt;
  &lt;li&gt;vertical torso&lt;/li&gt;
  &lt;li&gt;vertical upper arms&lt;/li&gt;
  &lt;li&gt;horizontal lower arms, with fingers resting on a keyboard&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Basically every fixed height desk is 74cm (about 29 inches) high. People obviously vary in height but I am 183cm tall, which is above average. If I adjust the height of my chair and sit in it such that my body position matches the recommendations, the distance from the bottom of my elbows to the floor is 69cm. If my forearms are to be level and resting on a keyboard which is on my desk, then the height of my desk would have to be 69cm, less the height of my keyboard. This means that the 74cm standard height of desks is too high for almost all humans.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/ergonomics-1280-cdef63d57.jpg&quot; alt=&quot;183cm tall human (left), ergonomic seating position (centre), result of standard 74cm height desk (right)&quot; srcset=&quot;/generated/assets/img/ergonomics-320-cdef63d57.webp 320w, /generated/assets/img/ergonomics-480-cdef63d57.webp 480w, /generated/assets/img/ergonomics-640-cdef63d57.webp 640w, /generated/assets/img/ergonomics-960-cdef63d57.webp 960w, /generated/assets/img/ergonomics-1280-cdef63d57.webp 1280w, /generated/assets/img/ergonomics-1920-cdef63d57.webp 1920w, /generated/assets/img/ergonomics-2560-cdef63d57.webp 2560w, /generated/assets/img/ergonomics-3840-cdef63d57.webp 3840w, /generated/assets/img/ergonomics-4049-cdef63d57.webp 4049w&quot; width=&quot;4049&quot; height=&quot;1442&quot; /&gt;

    &lt;figcaption&gt;183cm tall human (left), ergonomic seating position (centre), result of standard 74cm height desk (right)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It gets worse though – even adjustable height sit/stand desks rarely go lower than 70-74cm. This is still too high, even for a relatively tall person like me! Fortunately there are some adjustable height desks that go low enough for most people. Typically these are the ones that have 3 segments in the telescopic legs, rather than just 2. They are more expensive, but at least they can be adjusted to the right height.&lt;/p&gt;

&lt;h2 id=&quot;choosing-a-desk-frame&quot;&gt;Choosing a desk frame&lt;/h2&gt;

&lt;p&gt;I wanted my desk to have an adjustable height to accommodate a comfortable and healthy position seated and standing, so I decided to buy a desk frame. I bought the &lt;a href=&quot;https://updowndesk.com.au/collections/standing-desks-pro-series/products/updown-desk-pro-series-electric-standing-desk-frame-only&quot;&gt;UpDown desk pro series&lt;/a&gt;. This is a sturdy electric height adjustable desk frame , of the sort with 3 segment telescopic legs. It’s able to go down to 61.5cm (subject to the table top thickness), which can accommodate most humans comfortably without a foot stool (not just an uncommonly tall person). It arrived quickly and was very easy to assemble.&lt;/p&gt;

&lt;h2 id=&quot;next-step-making-a-tabletop&quot;&gt;Next step: making a tabletop&lt;/h2&gt;

&lt;p&gt;A desk frame isn’t much use without a tabletop. For the tabletop I decided to take a more ambitious route and make it myself. Read more in &lt;a href=&quot;/blogging/2021/02/20/new-desk-part-2-finding-a-slab.html&quot;&gt;part 2&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="blogging" /><category term="desk" /><category term="ergonomics" /><summary type="html">Like many people I spend a really huge amount of time working at a desk, so I think its important that my desk setup is comfortable and generally induces positive feelings. Until recently I was using a desk I found at a second hand store.</summary></entry><entry><title type="html">Making a new desk (part 2): Buying a timber slab</title><link href="https://www.danielplayfaircal.com/blogging/2021/02/20/new-desk-part-2-finding-a-slab.html" rel="alternate" type="text/html" title="Making a new desk (part 2): Buying a timber slab" /><published>2021-02-20T00:10:00+11:00</published><updated>2021-02-20T00:10:00+11:00</updated><id>https://www.danielplayfaircal.com/blogging/2021/02/20/new-desk-part-2-finding-a-slab</id><content type="html" xml:base="https://www.danielplayfaircal.com/blogging/2021/02/20/new-desk-part-2-finding-a-slab.html">&lt;p&gt;In &lt;a href=&quot;/blogging/2021/02/20/new-desk-part-1-buying-a-frame.html&quot;&gt;part 1&lt;/a&gt; of this series I bought a desk frame, but I didn’t buy a tabletop to rest on it. That’s because I made my own out of a solid slab of Eucalyptus. What follows for the next few posts is not so much a how to, but an account of my journey making the tabletop. I’m an amateur and I was doing many things for the first time, so this includes many mistakes I made along the way.&lt;/p&gt;

&lt;h2 id=&quot;finding-a-slab&quot;&gt;Finding a slab&lt;/h2&gt;

&lt;p&gt;My brother recommended &lt;a href=&quot;https://www.gonaturaltimbers.com.au/&quot;&gt;Go Natural Timbers&lt;/a&gt;, a business in Sydney which specialises in timber slabs and associated furniture, so I paid them a visit. There was a large warehouse full of slabs, in most cases stacked in their original positions in the tree. It doesn’t take that many large trees to fill a warehouse, so my choice was largely dictated by what was available – it wasn’t practical to choose a specific species and dimensions.&lt;/p&gt;

&lt;p&gt;My research led me to believe there were a few objectively important characteristics to look for when choosing a slab:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;stable moisture content, relative to the intended climate&lt;/li&gt;
  &lt;li&gt;lack of active rot, termites, or other wood eating creatures&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are cheap electronic meters that can measure moisture, but the appropriate moisture content varies depending on the climate. The aim is that the moisture content should be stable, since changes in moisture content cause the wood to swell or shrink, and therefore warp. I didn’t have one of these meters, and I didn’t know what an appropriate moisture content was for the Sydney’s climate. The staff told me that their slabs were kept outdoors for a long period of time before being sold, and that this ensured that they were dried appropriately.&lt;/p&gt;

&lt;p&gt;It’s also important that there are no wood eating organisms living in a piece of furniture, because otherwise they would eat the furniture. My understanding is that there are two ways to ensure that this is the case. Either the wood is heated in a kiln to a temperature that kills the organisms, or it is treated with a chemical that kills them. The timber shop staff told me that their slabs are chemically treated.&lt;/p&gt;

&lt;p&gt;So I took them at their word that the slabs on sale were dry and not decomposing. What remained was subjective choices. I wanted to build a desk that was reasonably deep (65-75cm) and 140cm wide, with a straight cut edge on the back and sides, and using the natural edge of the tree for the front edge. The depth requirement eliminated most of the slabs, which came from relatively narrow trees. The apartment I live in has a dark coloured carpet, so I wanted a light coloured wood to balance it. I also wanted wood with an interesting grain, with variations and imperfections. In my mind the purpose of using a slab rather than planks is to display the wood as it grows, and to embrace its natural form.&lt;/p&gt;

&lt;p&gt;I returned a week later and had a look at a few slabs. They are kept in stacks, with gaps in between for ventilation. The grain is not easily visible because the wood is rough, unfinished, and has been exposed for a long time. To help see the grain and colour, the staff sanded patches of a few slabs that I was interested in, and sprayed some oil on them to make the grain visible. Given what was available, the choice was between Camphor (of which there seemed to be an infinite supply), or a light coloured Eucalypt they referred to as “true blue gum” (the exact species was unknown). When I thought about it I realised I really wanted my desk to be made from a Eucalypt. Eucalypts are the dominant trees in most of Australia and especially around Sydney where I live. They are the trees that I see on bushwalks, that constantly amaze me with their infinitely varying shapes and colours, and their various impressive abilities like surviving bushfires and growing out of tiny cracks in cliff faces. They remind me of many of my favourite places.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/slab-1280-05449ca64.jpg&quot; alt=&quot;The original slab, milled but undressed&quot; srcset=&quot;/generated/assets/img/slab-320-05449ca64.webp 320w, /generated/assets/img/slab-480-05449ca64.webp 480w, /generated/assets/img/slab-640-05449ca64.webp 640w, /generated/assets/img/slab-960-05449ca64.webp 960w, /generated/assets/img/slab-1280-05449ca64.webp 1280w, /generated/assets/img/slab-1920-05449ca64.webp 1920w, /generated/assets/img/slab-2560-05449ca64.webp 2560w, /generated/assets/img/slab-3840-05449ca64.webp 3840w, /generated/assets/img/slab-4608-05449ca64.webp 4608w&quot; width=&quot;4608&quot; height=&quot;3456&quot; /&gt;

    &lt;figcaption&gt;The original slab, milled but undressed&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;So I chose the “true blue gum”. It fit all my requirements, and it had a very irregular grain, and lots of knots and cracks. This would be terrible for anything structural, but great to look at. The tree must have been absolutely enormous. The photo shows only half of the log (the narrower half!), and the slabs underneath are closer to the middle of the trunk, and therefore wider. Even this piece led me to stray from my intended dimensions. The narrowest point was 75cm wide.&lt;/p&gt;

&lt;h3 id=&quot;wood-species&quot;&gt;Wood species&lt;/h3&gt;

&lt;p&gt;I don’t know exactly what species the timber is, and it seemed like the staff at Go Natural Timbers didn’t either. There are apparently many species that are referred to as “true blue gum”. My brother is an arborist and suspects that it might be &lt;a href=&quot;https://en.wikipedia.org/wiki/Eucalyptus_saligna&quot;&gt;Eucalyptus Saligna&lt;/a&gt;, and it seems like &lt;a href=&quot;https://en.wikipedia.org/wiki/Eucalyptus_globulus&quot;&gt;Eucalyptus Globulus&lt;/a&gt; is also a possibility.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/tree-1280-09f73115e.jpg&quot; alt=&quot;Some unrelated but awesome trees I came across in Sydney&quot; srcset=&quot;/generated/assets/img/tree-320-09f73115e.webp 320w, /generated/assets/img/tree-480-09f73115e.webp 480w, /generated/assets/img/tree-640-09f73115e.webp 640w, /generated/assets/img/tree-960-09f73115e.webp 960w, /generated/assets/img/tree-1280-09f73115e.webp 1280w, /generated/assets/img/tree-1920-09f73115e.webp 1920w, /generated/assets/img/tree-2560-09f73115e.webp 2560w, /generated/assets/img/tree-3840-09f73115e.webp 3840w, /generated/assets/img/tree-4608-09f73115e.webp 4608w&quot; width=&quot;3456&quot; height=&quot;4608&quot; /&gt;

    &lt;figcaption&gt;Some unrelated but awesome trees I came across in Sydney&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;outsourcing&quot;&gt;Outsourcing&lt;/h2&gt;

&lt;p&gt;I asked Go Natural Timbers about the cost of doing various parts of the process (since they also sell bespoke furniture), and their advice to me as an amateur. It turned out that cutting a slab to shape is trivially easy (with a table saw), and levelling (dressing) it is also a quick process (and therefore cheap). However filling in cracks and sanding are labour intensive and therefore expensive. At the same time, levelling is difficult without specialised tools which I didn’t have access to.&lt;/p&gt;

&lt;p&gt;So I had the shop level the faces of the slab and cut it to shape, and decided to do the rest myself. Even though my apartment has no space for such a large desk I asked for it to be cut with the largest depth possible (75-85cm) because it seemed like a travesty to discard more of the wood. The price including dressing and cutting was $600.&lt;/p&gt;

&lt;h2 id=&quot;delivery&quot;&gt;Delivery&lt;/h2&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/car-1280-1390b8dd4.jpg&quot; alt=&quot;The dressed slab, in my physical possession!&quot; srcset=&quot;/generated/assets/img/car-320-1390b8dd4.webp 320w, /generated/assets/img/car-480-1390b8dd4.webp 480w, /generated/assets/img/car-640-1390b8dd4.webp 640w, /generated/assets/img/car-960-1390b8dd4.webp 960w, /generated/assets/img/car-1280-1390b8dd4.webp 1280w, /generated/assets/img/car-1920-1390b8dd4.webp 1920w, /generated/assets/img/car-2560-1390b8dd4.webp 2560w, /generated/assets/img/car-3840-1390b8dd4.webp 3840w, /generated/assets/img/car-4608-1390b8dd4.webp 4608w&quot; width=&quot;4608&quot; height=&quot;3456&quot; /&gt;

    &lt;figcaption&gt;The dressed slab, in my physical possession!&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;A week later I went to pick up my dressed slab. It had become significantly thinner, and some of the gaps turned out to be larger then they originally appeared. There was a small area of rot, but it seemed dry and still hard enough to be a desk. It also smelled really great.&lt;/p&gt;

&lt;p&gt;And so I had successfully acquired a slab! In &lt;a href=&quot;/blogging/2021/02/20/new-desk-part-3-gap-filling-and-sanding.html&quot;&gt;part 3&lt;/a&gt; of this series I’ll write about the next steps – filling the gaps, sanding, and shaping the slab.&lt;/p&gt;</content><author><name></name></author><category term="blogging" /><category term="desk" /><category term="timber slab" /><category term="eucalyptus" /><category term="sydney" /><summary type="html">In part 1 of this series I bought a desk frame, but I didn’t buy a tabletop to rest on it. That’s because I made my own out of a solid slab of Eucalyptus. What follows for the next few posts is not so much a how to, but an account of my journey making the tabletop. I’m an amateur and I was doing many things for the first time, so this includes many mistakes I made along the way.</summary></entry><entry><title type="html">Making a new desk (part 3): Gap filling with epoxy and sanding</title><link href="https://www.danielplayfaircal.com/blogging/2021/02/20/new-desk-part-3-gap-filling-and-sanding.html" rel="alternate" type="text/html" title="Making a new desk (part 3): Gap filling with epoxy and sanding" /><published>2021-02-20T00:10:00+11:00</published><updated>2021-02-20T00:10:00+11:00</updated><id>https://www.danielplayfaircal.com/blogging/2021/02/20/new-desk-part-3-gap-filling-and-sanding</id><content type="html" xml:base="https://www.danielplayfaircal.com/blogging/2021/02/20/new-desk-part-3-gap-filling-and-sanding.html">&lt;p&gt;In &lt;a href=&quot;/blogging/2021/02/20/new-desk-part-2-finding-a-slab.html&quot;&gt;part 2&lt;/a&gt; of this series I wrote about how I came into possession of a cut and dressed timber slab. With the slab in my possession, the first task was to turn it into an appropriate shape to be a desk. This included filling in various gaps, sanding surfaces, and rounding corners.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/burl-1024-69a5bb052.jpg&quot; alt=&quot;Bruno's previous project&quot; srcset=&quot;/generated/assets/img/burl-320-69a5bb052.webp 320w, /generated/assets/img/burl-480-69a5bb052.webp 480w, /generated/assets/img/burl-640-69a5bb052.webp 640w, /generated/assets/img/burl-960-69a5bb052.webp 960w, /generated/assets/img/burl-1024-69a5bb052.webp 1024w&quot; width=&quot;1024&quot; height=&quot;768&quot; /&gt;

    &lt;figcaption&gt;Bruno's previous project&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;My brother Bruno had previously built a coffee table out of a burl (a burl is to a tree what a tumour is to an animal). Bruno gave me a hand with my project – apart from lots of advice and lending me a lot of tools, he helped me with the mould and epoxy pouring, which sounds like it was the hardest part of his coffee table.&lt;/p&gt;

&lt;h2 id=&quot;cleaning-and-preparing&quot;&gt;Cleaning and preparing&lt;/h2&gt;

&lt;p&gt;The first step is to remove all the loose bark, dried sap, dead animals, etc. There were quite a few holes in the slab from boring insect larvae, and some of them still contained larvae. One of them became visible when the slab was cut, which made me slightly nervous. I didn’t see it actively move, so I guess it was dead. Either way, I took care to dig out each of the holes carefully including any larvae. One important lesson was to wear safety goggles when digging stuff out of wood. At one point some fragments of dry sap flew into my eye and caused me significant pain over many hours. Another is to take the time to find the most appropriate tool to dig/scratch/hook loose things. It takes a surprisingly long time to find all the cracks.&lt;/p&gt;

&lt;p&gt;We decorated the cracks by charring the inside edges with a blowtorch. This creates an interesting effect, but a disadvantage is that the charred wood tends to release bubbles into the epoxy during the gap filling. Potentially this could have been avoided with more limited burning or with slower curing epoxy.&lt;/p&gt;

&lt;h2 id=&quot;building-a-mould&quot;&gt;Building a mould&lt;/h2&gt;

&lt;p&gt;The mould prevents the epoxy from escaping while it sets in the slab. To build the mould we used a &lt;a href=&quot;https://www.bunnings.com.au/custompine-16-x-2400-x-1200mm-matt-white-melamine_p0097412&quot;&gt;single piece of melamine&lt;/a&gt; which we bought from Bunnings. Bunnings provides a free cutting service, so it was cut mostly to shape at the store, which meant that it fit in my car and we had less cutting to do.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/mould-1280-77658e343.jpg&quot; alt=&quot;Bruno, next to the mould&quot; srcset=&quot;/generated/assets/img/mould-320-77658e343.webp 320w, /generated/assets/img/mould-480-77658e343.webp 480w, /generated/assets/img/mould-640-77658e343.webp 640w, /generated/assets/img/mould-960-77658e343.webp 960w, /generated/assets/img/mould-1280-77658e343.webp 1280w, /generated/assets/img/mould-1920-77658e343.webp 1920w, /generated/assets/img/mould-2560-77658e343.webp 2560w, /generated/assets/img/mould-3840-77658e343.webp 3840w, /generated/assets/img/mould-4608-77658e343.webp 4608w&quot; width=&quot;4608&quot; height=&quot;3456&quot; /&gt;

    &lt;figcaption&gt;Bruno, next to the mould&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Building the mould was quite simple – just some use of a circular saw and inserting lots of screws. I tried to preserve the straight cut edges from Bunnings as much as possible rather than attempt to cut long straight edges myself.&lt;/p&gt;

&lt;p&gt;Many tutorials mention products called “mould release” – a substance which is applied to the inside surface of the mould to prevent any epoxy from sticking to it. We used some cooking oil which we applied with a paper towel. This worked well enough.&lt;/p&gt;

&lt;p&gt;There are lots of opinions about what kind of adhesive tape should be used to seal the piece when the epoxy is poured. We used painters tape (which looks like waxy paper). It’s cheap, easy to find, easy to apply, and perfectly capable of holding the epoxy in if applied neatly.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/cross-tape-1280-b84d46bee.jpg&quot; alt=&quot;After demoulding: channels of epoxy that seeped through grooves between layers of tape&quot; srcset=&quot;/generated/assets/img/cross-tape-320-b84d46bee.webp 320w, /generated/assets/img/cross-tape-480-b84d46bee.webp 480w, /generated/assets/img/cross-tape-640-b84d46bee.webp 640w, /generated/assets/img/cross-tape-960-b84d46bee.webp 960w, /generated/assets/img/cross-tape-1280-b84d46bee.webp 1280w, /generated/assets/img/cross-tape-1920-b84d46bee.webp 1920w, /generated/assets/img/cross-tape-2560-b84d46bee.webp 2560w, /generated/assets/img/cross-tape-3840-b84d46bee.webp 3840w, /generated/assets/img/cross-tape-4222-b84d46bee.webp 4222w&quot; width=&quot;4222&quot; height=&quot;2427&quot; /&gt;

    &lt;figcaption&gt;After demoulding: channels of epoxy that seeped through grooves between layers of tape&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;One issue I faced later is that the epoxy is able to spread down the grooves in between strips of tape. For this reason, I think it would have worked better to apply the tape in the direction of the grain. This would mean that any epoxy which travels down the grooves is unlikely to spread far from the crack it leaked out from.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/demould-1280-1a2e956e7.jpg&quot; alt=&quot;Leakage and sticking where the warp caused the slab to rise above the mould&quot; srcset=&quot;/generated/assets/img/demould-320-1a2e956e7.webp 320w, /generated/assets/img/demould-480-1a2e956e7.webp 480w, /generated/assets/img/demould-640-1a2e956e7.webp 640w, /generated/assets/img/demould-960-1a2e956e7.webp 960w, /generated/assets/img/demould-1280-1a2e956e7.webp 1280w, /generated/assets/img/demould-1334-1a2e956e7.webp 1334w&quot; width=&quot;1334&quot; height=&quot;945&quot; /&gt;

    &lt;figcaption&gt;Leakage and sticking where the warp caused the slab to rise above the mould&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Another problem is keeping the piece firmly against the mould. We simply rested the mould on an outdoor table, but that IKEA table was not particularly rigid in the central area. Also by this time (i.e. after a month of researching how to get this far) the slab had developed a slight warp which caused the central area to lift slightly from the mould. This probably contributed to a small leakage of epoxy in the central area, which made it more difficult to remove the mould. It didn’t stick strongly (thanks to the tape, oil, and melamine coating), but because the stuck area was in the middle it required some effort with a machete to remove.&lt;/p&gt;

&lt;p&gt;In hindsight, it would have been worthwhile to set up some vices to hold the slab firmly on the bottom of the mould. As well as preventing the epoxy leaking issue, this would have prevented the epoxy from baking in the warp, and instead caused it to hold the surrounding timber in a flat shape.&lt;/p&gt;

&lt;h2 id=&quot;pouring-epoxy&quot;&gt;Pouring epoxy&lt;/h2&gt;

&lt;p&gt;I used two different epoxies – one which was left over from Bruno’s coffee table (&lt;a href=&quot;https://fiberglass-sales.com.au/&quot;&gt;Fibreglass Sales&lt;/a&gt; Epoxy 2020) and another which I bought for this project (&lt;a href=&quot;https://www.barnes.com.au/epoxy-resin/megapour-deep-cast-epoxy-resin-2706&quot;&gt;Barnes Megapour&lt;/a&gt;). I discovered later that using two epoxies was a risk, because there are many different types with different compositions, and not all of them can form a chemical bond with each other. It was also a mistake to do the first pour before buying enough to finish the job. Each pour needs to be done before the previous pour has fully cured, because this allows a chemical bond to form between the layers. Like most glue, epoxy does not stick well to smooth surfaces, including unsanded epoxy!&lt;/p&gt;

&lt;p&gt;There are many different kinds of epoxy. They vary in terms of their curing time, endotherm, viscosity, shrinkage during cure, clarity, UV yellowing resistance, and more. I chose to allow the fill to be transparent, and not to add any dye. This avoids the need to buy and mix in dye, but also makes bubbles and yellowing (including UV induced yellowing) is more visible. So it was useful to choose a UV resistant epoxy. Barnes Megapour is, but Fibreglass Sales Epoxy 2020 is not.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/wet-bubbles-1280-b4b773a79.jpg&quot; alt=&quot;Small bubbles emerging from charred wood&quot; srcset=&quot;/generated/assets/img/wet-bubbles-320-b4b773a79.webp 320w, /generated/assets/img/wet-bubbles-480-b4b773a79.webp 480w, /generated/assets/img/wet-bubbles-640-b4b773a79.webp 640w, /generated/assets/img/wet-bubbles-960-b4b773a79.webp 960w, /generated/assets/img/wet-bubbles-1280-b4b773a79.webp 1280w, /generated/assets/img/wet-bubbles-1920-b4b773a79.webp 1920w, /generated/assets/img/wet-bubbles-2560-b4b773a79.webp 2560w, /generated/assets/img/wet-bubbles-3568-b4b773a79.webp 3568w&quot; width=&quot;3568&quot; height=&quot;1887&quot; /&gt;

    &lt;figcaption&gt;Small bubbles emerging from charred wood&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Another consideration is the curing speed, which is closely related to the endotherm and maximum pouring depth. I used one with a 2-3 hour cure time, and another with 24-48 hours. I much preferred the longer curing time. The working times respectively were about 45 minutes and 3 hours. 45 minutes is short enough to feel rushed when there are many cracks to find and there is a constant stream of bubbles to pop. A lower viscosity and longer cure time means it is easier for bubbles to rise to the surface and pop rather than being frozen in. The combination of all the narrow and irregularly shaped cracks in the timber and the charred edges meant that bubbles kept appearing for a long time, and the results were better with the slow curing epoxy.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/fill1-1280-cc91c9176.jpg&quot; alt=&quot;The first pour of epoxy (about half the depth)&quot; srcset=&quot;/generated/assets/img/fill1-320-cc91c9176.webp 320w, /generated/assets/img/fill1-480-cc91c9176.webp 480w, /generated/assets/img/fill1-640-cc91c9176.webp 640w, /generated/assets/img/fill1-960-cc91c9176.webp 960w, /generated/assets/img/fill1-1280-cc91c9176.webp 1280w, /generated/assets/img/fill1-1920-cc91c9176.webp 1920w, /generated/assets/img/fill1-2560-cc91c9176.webp 2560w, /generated/assets/img/fill1-3840-cc91c9176.webp 3840w, /generated/assets/img/fill1-4608-cc91c9176.webp 4608w&quot; width=&quot;4608&quot; height=&quot;3456&quot; /&gt;

    &lt;figcaption&gt;The first pour of epoxy (about half the depth)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It’s important not to pour too much depth at once, because the endothermic curing reaction can cause the epoxy to overheat and cure too fast. This results in the epoxy changing shape after it has hardened, which causes stress and uneven surfaces. The staff at the timber shop told me that in their pieces they typically pour 5 separate layers. My experience confirms that this is a good idea. With the 2020 epoxy, pouring too much at once (more than about 1-2cm) results in bubbles and shrinkage after cure. Barnes Megapour actually shrinks more (subjectively), but it does so before it hardens, so without any permanent impact. But the result of this is that no matter how carefully you fill in all the cracks the first time, the epoxy always sinks in further just before it hardens. So even with deep pouring epoxy, you need to do multiple pours. You may as well do them at a consistent depth and minimise bubbles.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/soft-1280-7c77ef5a5.jpg&quot; alt=&quot;Permanently soft semi cured epoxy (in the finished piece)&quot; srcset=&quot;/generated/assets/img/soft-320-7c77ef5a5.webp 320w, /generated/assets/img/soft-480-7c77ef5a5.webp 480w, /generated/assets/img/soft-640-7c77ef5a5.webp 640w, /generated/assets/img/soft-960-7c77ef5a5.webp 960w, /generated/assets/img/soft-1280-7c77ef5a5.webp 1280w, /generated/assets/img/soft-1920-7c77ef5a5.webp 1920w, /generated/assets/img/soft-2375-7c77ef5a5.webp 2375w&quot; width=&quot;2375&quot; height=&quot;1461&quot; /&gt;

    &lt;figcaption&gt;Permanently soft semi cured epoxy (in the finished piece)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Its a silly mistake but its worth saying: make sure you mix the epoxy correctly. Use scales, measuring cups, calculators – do what you have to do. If you don’t mix it properly it will never cure, and you won’t know it until the soft paste is in your piece. I made this mistake with one pour. Luckily I was only filling some smaller cracks, so the soft parts on the finished product are not obvious unless you know where they are.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/vertical-bubbles-1280-9a892206a.jpg&quot; alt=&quot;Bubbles stuck underneath a peak (but actually above a trough)&quot; srcset=&quot;/generated/assets/img/vertical-bubbles-320-9a892206a.webp 320w, /generated/assets/img/vertical-bubbles-480-9a892206a.webp 480w, /generated/assets/img/vertical-bubbles-640-9a892206a.webp 640w, /generated/assets/img/vertical-bubbles-960-9a892206a.webp 960w, /generated/assets/img/vertical-bubbles-1280-9a892206a.webp 1280w, /generated/assets/img/vertical-bubbles-1920-9a892206a.webp 1920w, /generated/assets/img/vertical-bubbles-2174-9a892206a.webp 2174w&quot; width=&quot;2174&quot; height=&quot;1472&quot; /&gt;

    &lt;figcaption&gt;Bubbles stuck underneath a peak (but actually above a trough)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;We poured the epoxy with the desk upside down. I think the right way up would have worked better. A place where you can see bubbles from above is a place where bubbles have space to rise to the surface and pop. But as you can see there are places where bubbles are visible from underneath but cannot rise. Also, there is no chance that a fold in the tape will get stuck in the epoxy on the top side, because there is no tape on the top side.&lt;/p&gt;

&lt;p&gt;In hindsight I can see why it is common to tint the epoxy (even with a dark brown colour which does not stand out). There are a lot of visual imperfections that can happen in epoxy pouring, and a tint hides most of them.&lt;/p&gt;

&lt;h2 id=&quot;first-coat-of-sanding&quot;&gt;First coat of sanding&lt;/h2&gt;

&lt;p&gt;The first coat of sanding after filling in the larger cracks is the only time its necessary to remove a lot of material. Inevitably there will be large areas where the epoxy is above the original surface of the wood, and these puddles need to be sanded away to get back to the wood.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/belt-scratches-1280-c288fdf56.jpg&quot; alt=&quot;Scratches made by the belt sander&quot; srcset=&quot;/generated/assets/img/belt-scratches-320-c288fdf56.webp 320w, /generated/assets/img/belt-scratches-480-c288fdf56.webp 480w, /generated/assets/img/belt-scratches-640-c288fdf56.webp 640w, /generated/assets/img/belt-scratches-960-c288fdf56.webp 960w, /generated/assets/img/belt-scratches-1280-c288fdf56.webp 1280w, /generated/assets/img/belt-scratches-1920-c288fdf56.webp 1920w, /generated/assets/img/belt-scratches-2560-c288fdf56.webp 2560w, /generated/assets/img/belt-scratches-3840-c288fdf56.webp 3840w, /generated/assets/img/belt-scratches-4608-c288fdf56.webp 4608w&quot; width=&quot;4608&quot; height=&quot;2450&quot; /&gt;

    &lt;figcaption&gt;Scratches made by the belt sander&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;We used a belt sander with 40 grit sanding belts for this purpose. This was very fast, but I can confirm that belt sanders can also cause a lot of damage very fast, so its important to maintain even pressure, use an appropriate pattern of movement, and avoid mistakes like rolling it over the edges or leaving it running in one position. It’s also important to adjust the rollers frequently, otherwise the machine will happily sand itself and self destruct.&lt;/p&gt;

&lt;p&gt;I found that sanding can expose more gaps in the wood, and it pays to touch these up with epoxy later. This should be done as late as possible in the sanding process, but not so late that you need to repeat a coat of sanding. I’m not sure when that would be. I continued to use a 40 grit sanding belt after my final epoxy touch ups, but I suspect that doing it after one of the early coats with the random orbital sander would have left less unfilled cracks.&lt;/p&gt;

&lt;h2 id=&quot;filling-other-faces&quot;&gt;Filling other faces&lt;/h2&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/empty-cracks-1280-cbf17c875.jpg&quot; alt=&quot;Unfilled cracks on the top side (underneath for the first pour)&quot; srcset=&quot;/generated/assets/img/empty-cracks-320-cbf17c875.webp 320w, /generated/assets/img/empty-cracks-480-cbf17c875.webp 480w, /generated/assets/img/empty-cracks-640-cbf17c875.webp 640w, /generated/assets/img/empty-cracks-960-cbf17c875.webp 960w, /generated/assets/img/empty-cracks-1280-cbf17c875.webp 1280w, /generated/assets/img/empty-cracks-1920-cbf17c875.webp 1920w, /generated/assets/img/empty-cracks-2560-cbf17c875.webp 2560w, /generated/assets/img/empty-cracks-2685-cbf17c875.webp 2685w&quot; width=&quot;2685&quot; height=&quot;1336&quot; /&gt;

    &lt;figcaption&gt;Unfilled cracks on the top side (underneath for the first pour)&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;In my slab, the epoxy poured from the bottom face was able to reach most of the gaps in slab, but there were still some smaller gaps visible from other faces which were not filled in this stage. To fill these I did some additional pours at different angles.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/stand-1280-55a5be828.jpg&quot; alt=&quot;The mould, reconstructed as a stand&quot; srcset=&quot;/generated/assets/img/stand-320-55a5be828.webp 320w, /generated/assets/img/stand-480-55a5be828.webp 480w, /generated/assets/img/stand-640-55a5be828.webp 640w, /generated/assets/img/stand-960-55a5be828.webp 960w, /generated/assets/img/stand-1280-55a5be828.webp 1280w, /generated/assets/img/stand-1920-55a5be828.webp 1920w, /generated/assets/img/stand-2560-55a5be828.webp 2560w, /generated/assets/img/stand-3840-55a5be828.webp 3840w, /generated/assets/img/stand-4608-55a5be828.webp 4608w&quot; width=&quot;3456&quot; height=&quot;4608&quot; /&gt;

    &lt;figcaption&gt;The mould, reconstructed as a stand&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;I reused the mould mostly as it was to pour from the top face. Things got a little bit more difficult for the edges though. I decided to reuse the melamine from the mould to build a pair of stands to hold the slab at the appropriate angles while I poured into the edges.&lt;/p&gt;

&lt;p&gt;For these pours, there was no need for a complete mould. Although were some gaps that weren’t sealed around each edge, it was good enough to cover any potential leakage points with painters tape.&lt;/p&gt;

&lt;h2 id=&quot;shaping-the-edges&quot;&gt;Shaping the edges&lt;/h2&gt;

&lt;p&gt;For the cut edges, I took up an offer from Go Natural Timbers to use a router to round the corners. They also showed me how to roll a random orbital sander over corners to round them, which is what I did to round the corners of the natural edge. They seemed not to be too shocked by the work so far, which was reassuring. In fact they said: “nothing there that can’t be fixed”.&lt;/p&gt;

&lt;p&gt;The natural edge was one of the harder parts of the project, and is probably the area with the largest issues in the finished product. The incorrectly mixed epoxy ended up in the natural edge, and there are also some cracks where subsequent layers of epoxy didn’t bond and have since separated. The varying angle of the natural edge made it more difficult to pour very much epoxy at once, and increased the risk of these mistakes.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/edge-cracks-1280-3ed52fb04.jpg&quot; srcset=&quot;/generated/assets/img/edge-cracks-320-3ed52fb04.webp 320w, /generated/assets/img/edge-cracks-480-3ed52fb04.webp 480w, /generated/assets/img/edge-cracks-640-3ed52fb04.webp 640w, /generated/assets/img/edge-cracks-960-3ed52fb04.webp 960w, /generated/assets/img/edge-cracks-1280-3ed52fb04.webp 1280w, /generated/assets/img/edge-cracks-1920-3ed52fb04.webp 1920w, /generated/assets/img/edge-cracks-2560-3ed52fb04.webp 2560w, /generated/assets/img/edge-cracks-3840-3ed52fb04.webp 3840w, /generated/assets/img/edge-cracks-4180-3ed52fb04.webp 4180w&quot; width=&quot;4180&quot; height=&quot;1117&quot; /&gt;

    &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/edge-drowned-1280-b7fe58b62.jpg&quot; srcset=&quot;/generated/assets/img/edge-drowned-320-b7fe58b62.webp 320w, /generated/assets/img/edge-drowned-480-b7fe58b62.webp 480w, /generated/assets/img/edge-drowned-640-b7fe58b62.webp 640w, /generated/assets/img/edge-drowned-960-b7fe58b62.webp 960w, /generated/assets/img/edge-drowned-1280-b7fe58b62.webp 1280w, /generated/assets/img/edge-drowned-1327-b7fe58b62.webp 1327w&quot; width=&quot;1327&quot; height=&quot;329&quot; /&gt;

    &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/edge-scratches-1280-92706f43a.jpg&quot; srcset=&quot;/generated/assets/img/edge-scratches-320-92706f43a.webp 320w, /generated/assets/img/edge-scratches-480-92706f43a.webp 480w, /generated/assets/img/edge-scratches-640-92706f43a.webp 640w, /generated/assets/img/edge-scratches-960-92706f43a.webp 960w, /generated/assets/img/edge-scratches-1280-92706f43a.webp 1280w, /generated/assets/img/edge-scratches-1920-92706f43a.webp 1920w, /generated/assets/img/edge-scratches-2560-92706f43a.webp 2560w, /generated/assets/img/edge-scratches-3442-92706f43a.webp 3442w&quot; width=&quot;3442&quot; height=&quot;961&quot; /&gt;

    &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;I tried to fill in every last crack in the natural edge, and in doing so covered the entire surface in epoxy. I then had to remove this epoxy using wire brush drill attachments and a random orbital sander, which resulted in more of the wood being removed than I would have liked. I think a lighter touch with the epoxy (even at the expense of leaving some small cracks unfilled) would have removed the need for such aggressive use of the wire brush attachment and sanding, and preserved the natural appearance better. Perhaps also a finer/softer wire brush could have removed some discoloured wood from the surface without creating such deep scratches.&lt;/p&gt;

&lt;h2 id=&quot;final-sanding&quot;&gt;Final sanding&lt;/h2&gt;

&lt;p&gt;For the later coats of sand, I used a random orbital sander. This machine is much slower than the belt sander, but also much easier to use, and produces much better results with minimal visible scratches. I found that it was worth repeating the same grit that was done with the belt sander. In my case it took a long time with the random orbital sander at 40 grit to remove the scratches made by the belt sander at 40 grit, and the result was much smoother. I think it might even be worth going down a step or two, for example using 60-80 grit with the belt sander and then switching to the random orbital sander at 40 grit.&lt;/p&gt;

&lt;p&gt;I found that using a foam backing pad reduced noise and vibration and produced less visible scratches. It was also useful to allow the sanding disc to wrap around the corners and over the natural edge. Take care to get a backing pad and sanding discs with size and hole positions matching the sander – otherwise things will get very dusty. Finer sanding grits produce much less sawdust, but it is finer and more irritating.&lt;/p&gt;

&lt;p&gt;I did the following progression of grits: 40, 60, 80, 120, 180, 240, 320. One of the carpenters at Go Natural Timbers told me that it was necessary to go up to 180 for an epoxy finish (which is a deep coating), and 240 for a lacquer finish (typically a very shallow coating). The finer grits don’t take as long though, so it made sense to go slightly further. It’s hard to capture in photos, but in real life the sanding makes the wood look much better – all the small details in the grain become visible.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/sanded-1280-adc2f8912.jpg&quot; alt=&quot;Sanding complete and corners rounded&quot; srcset=&quot;/generated/assets/img/sanded-320-adc2f8912.webp 320w, /generated/assets/img/sanded-480-adc2f8912.webp 480w, /generated/assets/img/sanded-640-adc2f8912.webp 640w, /generated/assets/img/sanded-960-adc2f8912.webp 960w, /generated/assets/img/sanded-1280-adc2f8912.webp 1280w, /generated/assets/img/sanded-1920-adc2f8912.webp 1920w, /generated/assets/img/sanded-2560-adc2f8912.webp 2560w, /generated/assets/img/sanded-3840-adc2f8912.webp 3840w, /generated/assets/img/sanded-4608-adc2f8912.webp 4608w&quot; width=&quot;4608&quot; height=&quot;3456&quot; /&gt;

    &lt;figcaption&gt;Sanding complete and corners rounded&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;onwards-to-finishing&quot;&gt;Onwards to finishing&lt;/h2&gt;

&lt;p&gt;The slab was now in its final shape, so this concludes part 3 of the series. In &lt;a href=&quot;/blogging/2021/02/20/new-desk-part-4-finishing.html&quot;&gt;part 4&lt;/a&gt;, I’ll write about the process of choosing and applying a finish to protect the wood and enhance the aesthetics.&lt;/p&gt;</content><author><name></name></author><category term="blogging" /><category term="timber slab" /><category term="epoxy" /><category term="sanding" /><category term="mould" /><summary type="html">In part 2 of this series I wrote about how I came into possession of a cut and dressed timber slab. With the slab in my possession, the first task was to turn it into an appropriate shape to be a desk. This included filling in various gaps, sanding surfaces, and rounding corners.</summary></entry><entry><title type="html">Making a new desk (part 4): Choosing and applying a finish</title><link href="https://www.danielplayfaircal.com/blogging/2021/02/20/new-desk-part-4-finishing.html" rel="alternate" type="text/html" title="Making a new desk (part 4): Choosing and applying a finish" /><published>2021-02-20T00:10:00+11:00</published><updated>2021-02-20T00:10:00+11:00</updated><id>https://www.danielplayfaircal.com/blogging/2021/02/20/new-desk-part-4-finishing</id><content type="html" xml:base="https://www.danielplayfaircal.com/blogging/2021/02/20/new-desk-part-4-finishing.html">&lt;p&gt;In &lt;a href=&quot;/blogging/2021/02/20/new-desk-part-3-gap-filling-and-sanding.html&quot;&gt;part 3&lt;/a&gt; of this series I ended up with a tabletop for my desk that was in its final shape, with smooth sanded surfaces, gaps filled, and nicely rounded corners. The next step was to apply a finish to the wood in order to protect it from the elements, and to enhance its aesthetic qualities including the appearance and texture.&lt;/p&gt;

&lt;h2 id=&quot;choosing-a-finishing-product&quot;&gt;Choosing a finishing product&lt;/h2&gt;

&lt;p&gt;Wow, there are a lot of options for how to finish wood, and a lot of strong opinions on what the best way is! I got held up for at least a month trying to understand all the different options here, and despite that I feel like I still have a very limited understanding.&lt;/p&gt;

&lt;p&gt;One thing I learned is that there are many differences between the names that finishing products are marketed under, and the actual composition and properties of those products. Words like “lacquer” and “oil” do not have a consistent meaning, and some products have different names in different countries.&lt;/p&gt;

&lt;p&gt;Most importantly I wanted a finish that was durable – I didn’t want to be stressed about burning it with a mug of hot coffee, scratching it with a mouse, or soaking it by spilling a drink. Ideally I also wanted to be able to use household cleaning products on it (e.g. surface cleaner) without causing any damage. This eliminated most “oils” (including products like “Danish oil” which is not just oil), because they do not entirely seal the timber and reliably keep water out. It also eliminated shellac, which is very easily dissolved.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/pre-warp-1280-8ffdef6d2.jpg&quot; alt=&quot;While I researched finishing products, the slab was busy warping&quot; srcset=&quot;/generated/assets/img/pre-warp-320-8ffdef6d2.webp 320w, /generated/assets/img/pre-warp-480-8ffdef6d2.webp 480w, /generated/assets/img/pre-warp-640-8ffdef6d2.webp 640w, /generated/assets/img/pre-warp-960-8ffdef6d2.webp 960w, /generated/assets/img/pre-warp-1280-8ffdef6d2.webp 1280w, /generated/assets/img/pre-warp-1920-8ffdef6d2.webp 1920w, /generated/assets/img/pre-warp-1927-8ffdef6d2.webp 1927w&quot; width=&quot;1927&quot; height=&quot;442&quot; /&gt;

    &lt;figcaption&gt;While I researched finishing products, the slab was busy warping&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The remaining choices were “lacquer” (which is a lot of things), polyurethane, and epoxy (epoxy has various chemical compositions but at least they all seem to work in a similar way). Epoxy is generally applied by pouring a large amount of it over a level surface so that it creates a puddle. The effect is a deep mirror finish which is extremely durable. I wanted a shallower finish which had more of the appearance of wood rather than glass. Perhaps more importantly, at this point my slab had a significant warp, and it seemed that this would complicate the process of applying a puddle of epoxy.&lt;/p&gt;

&lt;p&gt;It seems that amongst professionals, the most preferred way of applying thin coatings is with a spray gun – a device that atomises paint into fine particles and blows it onto a surface. Using these is dangerous because paints are often extremely flammable and toxic. Probably this explains why such paints are hard to find in consumer hardware stores. Most of the higher quality coatings, and especially ones where there are clear advertised specifications, are designed to be applied with a spray gun.&lt;/p&gt;

&lt;p&gt;I had already spent a large amount of time and money on this project and I didn’t want to compromise it with a sub par finishing product, or risk using a product that didn’t have any clear specifications (i.e. anything from hardware stores). However, I also didn’t want to spend a ridiculous sum on a spray gun that I would rarely use. The most common way to apply such finishing products is using a HVLP (high volume low pressure) spray gun. This requires a spray gun, but also a source of low pressure air from either an air compressor and pressure regulator or a turbine type motor (like a vacuum cleaner). Although most of these are expensive, I managed to find a integrated turbine and spray gun for $69 in the &lt;a href=&quot;https://sydneytools.com.au/product/chicago-air-c600ps-600w-1000ml-power-paint-spray-gun&quot;&gt;Chicago Air C600PS&lt;/a&gt;. I suspect that no professional would use this machine, but I hoped that it would be good enough for my purpose. This opened the possibility of using spray finishes.&lt;/p&gt;

&lt;p&gt;I managed to find a number of businesses that sell wood coatings in Sydney, including &lt;a href=&quot;https://www.22croma.com.au/&quot;&gt;Croma Coatings&lt;/a&gt; and &lt;a href=&quot;https://www.bccoatings.com.au/&quot;&gt;BC Coatings&lt;/a&gt;. Each has a catalogue on their website with detailed data sheets explaining the properties of each finish. The sales rep from Croma Coatings was particularly helpful in explaining my options. The better polyurethane coatings (the 2 component or 2K ones) were not an option because they are highly toxic, to the extent that spraying them outside is illegal. Those that remained remained were lacquers.&lt;/p&gt;

&lt;p&gt;The older type of lacquer (Nitrocellulose lacquer) was not ideal because it was less durable. It dries purely through the evaporation of solvents, so the same solvents can dissolve the paint after it dries. Also it has a tendency to turn yellow over time, especially when exposed to UV light. This was important to me because my desk was of a light coloured timber and I didn’t want it to turn yellow over time, even if it was in some sunlight.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/lacquer-1280-1e993d4ce.jpg&quot; srcset=&quot;/generated/assets/img/lacquer-320-1e993d4ce.webp 320w, /generated/assets/img/lacquer-480-1e993d4ce.webp 480w, /generated/assets/img/lacquer-640-1e993d4ce.webp 640w, /generated/assets/img/lacquer-960-1e993d4ce.webp 960w, /generated/assets/img/lacquer-1280-1e993d4ce.webp 1280w, /generated/assets/img/lacquer-1920-1e993d4ce.webp 1920w, /generated/assets/img/lacquer-2560-1e993d4ce.webp 2560w, /generated/assets/img/lacquer-3460-1e993d4ce.webp 3460w&quot; width=&quot;3460&quot; height=&quot;1514&quot; /&gt;

    &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;There are newer types of lacquer which chemically harden in addition to drying through the evaporation of solvents, which makes the finish more durable. These are called “catalysed lacquer”. Some have a slow catalyst which is added before sale, while others must be mixed with the catalyst immediately before use. Some of these lacquers are clear and non yellowing. My choice was the post catalysed option, which is called “acid catalysed lacquer” in Australia, and “conversion varnish” in the USA. The specific product was &lt;a href=&quot;https://www.22croma.com.au/products/solvent-based-coatings/two-pack-acid-catalyst-paints-clears/cm1510-non-yellowing-clear-multicoat.aspx&quot;&gt;CM1510 clear multicoat&lt;/a&gt;. Being a multicoat, it can be applied both as an undercoat to seal the wood and as a topcoat to create the finished surface, so there is no need for multiple finishing products. The sales rep told me that it was almost as durable as 2K polyurethane while being safer to apply. I chose the 25% gloss option (AKA “satin”). Besides the lacquer, I bought separately the catalyst, a thinner (which is important especially for cheaper and less powerful spray guns), and a UV absorber additive (to protect the non UV resistant 2020 epoxy that I had used earlier). I considered buying also a retarder additive, which slows down the evaporation of solvents. This can be necessary to prevent “blushing” or bubbles when spraying in hot and humid weather. The sales rep told me that it wouldn’t be necessary if I picked an appropriate day to spray outdoors. The total cost for a 4 litre can of lacquer plus the additives was $242.88.&lt;/p&gt;

&lt;h2 id=&quot;applying-the-finish&quot;&gt;Applying the finish&lt;/h2&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/ppe-1280-4b891b3e2.jpg&quot; alt=&quot;TIL: masks don't work so well when you have a beard&quot; srcset=&quot;/generated/assets/img/ppe-320-4b891b3e2.webp 320w, /generated/assets/img/ppe-480-4b891b3e2.webp 480w, /generated/assets/img/ppe-640-4b891b3e2.webp 640w, /generated/assets/img/ppe-960-4b891b3e2.webp 960w, /generated/assets/img/ppe-1280-4b891b3e2.webp 1280w, /generated/assets/img/ppe-1920-4b891b3e2.webp 1920w, /generated/assets/img/ppe-2560-4b891b3e2.webp 2560w, /generated/assets/img/ppe-3840-4b891b3e2.webp 3840w, /generated/assets/img/ppe-4608-4b891b3e2.webp 4608w&quot; width=&quot;4608&quot; height=&quot;3456&quot; /&gt;

    &lt;figcaption&gt;TIL: masks don't work so well when you have a beard&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;As well as the $69 paint sprayer, I bought some safety goggles and face masks to protect myself from the toxic lacquer fumes. Incredibly, a pack of disposable P2/N95 vapour masks was more expensive than the paint sprayer. Strange times.&lt;/p&gt;

&lt;p&gt;So far I had done everything on the balcony of my apartment. Although my neighbours were very patient with loud power tools and probably some sawdust, I think spraying toxic paint fumes would have been a bridge too far (and also would have made my apartment borderline uninhabitable for a few days). My parents had an outdoor shed, which seemed like the best option. Lacquer dries to the touch in only a few minutes, but in that time its important to prevent small objects from falling onto it and creating imperfections in the finish. The shed was good because it was reasonably well ventilated but also covered and therefore sheltered from wind, dust, pollen, etc.&lt;/p&gt;

&lt;p&gt;I experimented spraying some scrap pieces of wood to get used to the spray gun. I found that the best results were achieved with quite a large amount of thinner. The lacquer data sheet specified that it could be diluted with up to 30% thinner. I found that with any less than this, the paint gun was unable to evenly atomise it and instead threw large splotches of lacquer rather than an even mist. Unfortunately the more thinned mixture was also less able to resist dripping down vertical surfaces, which limited how much paint I could apply at once and created a dimpled surface on the vertical surfaces. Luckily my piece was almost entirely one horizontal surface, so this wasn’t a large issue, although the edges did end up with a slightly cloudy/frosty appearance. Judging by videos of automotive painting, better spray guns can atomise paint much more finely than the super cheap one I was using.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/wet-1280-54246823a.jpg&quot; alt=&quot;2-3 minutes after application. I was careful not to inhale while taking this photo!&quot; srcset=&quot;/generated/assets/img/wet-320-54246823a.webp 320w, /generated/assets/img/wet-480-54246823a.webp 480w, /generated/assets/img/wet-640-54246823a.webp 640w, /generated/assets/img/wet-960-54246823a.webp 960w, /generated/assets/img/wet-1280-54246823a.webp 1280w, /generated/assets/img/wet-1920-54246823a.webp 1920w, /generated/assets/img/wet-2560-54246823a.webp 2560w, /generated/assets/img/wet-3840-54246823a.webp 3840w, /generated/assets/img/wet-4608-54246823a.webp 4608w&quot; width=&quot;4608&quot; height=&quot;3456&quot; /&gt;

    &lt;figcaption&gt;2-3 minutes after application. I was careful not to inhale while taking this photo!&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It quickly became apparent that the toxicity of lacquer fumes is not a joke. Although the thinner has the strongest smell, the lacquer fumes are truly unpleasant. In large concentrations they cause a burning sensation in the nose, and in smaller concentrations they cause a feeling resembling nausea or a headache. Even a faint smell of it (e.g. a few rooms away with windows open in the second day of drying) makes it impossible to sleep. My P2 masks and safety goggles were the bare minimum of protection. I felt a very direct physical need to hold my breath while spraying and to leave the room before inhaling again.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/dust-1280-fc67f28f5.jpg&quot; alt=&quot;About 10 minutes after application. Some lumps due to dust, and cracks that weren't filled with epoxy.&quot; srcset=&quot;/generated/assets/img/dust-320-fc67f28f5.webp 320w, /generated/assets/img/dust-480-fc67f28f5.webp 480w, /generated/assets/img/dust-640-fc67f28f5.webp 640w, /generated/assets/img/dust-960-fc67f28f5.webp 960w, /generated/assets/img/dust-1280-fc67f28f5.webp 1280w, /generated/assets/img/dust-1920-fc67f28f5.webp 1920w, /generated/assets/img/dust-2560-fc67f28f5.webp 2560w, /generated/assets/img/dust-3664-fc67f28f5.webp 3664w&quot; width=&quot;3664&quot; height=&quot;1741&quot; /&gt;

    &lt;figcaption&gt;About 10 minutes after application. Some lumps due to dust, and cracks that weren't filled with epoxy.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It turns out that its very difficult to prevent even a grain of dust from falling onto wet paint, even just for 15 minutes. The shed I was spraying the lacquer in had some dust on the roof, and although I did my best to shake/sweep/blow it away, some of it remained and fell on the wet lacquer. Some small hairs fell off my arms, at least one piece of pollen blew in (perhaps when I was opening/closing the shed door), and various small insects perished in the toxic lacquer fumes and fell rudely on the wet lacquer, creating imperfections.&lt;/p&gt;

&lt;p&gt;The lacquer was also not able to fill even small cracks which were exposed by sanding after epoxying or by wood movement while I paused for weeks to read about finishes. With many coats it can fill in pores, but really nothing larger.&lt;/p&gt;

&lt;p&gt;I ended up doing 3 coats on the top side, and 2 on the bottom side. The first coat raised the grain of the wood and ended up very rough. The second coat was much smoother, but was still a bit rough around the deeper pores in the wood. The third coat still didn’t fill in the pores entirely, but was very smooth to the touch. Before each coat I sprayed some lacquer on scrap wood to adjust the spray gun volume and check the conditions. Spraying on a wet piece of wood exaggerated the blushing effect which can happen when it is too hot or humid, and was a good test for the conditions. I got a noticeably smoother finish during the colder times of the day, in the context of some fairly typical Sydney days with 25C maximum temperature, relatively high humidity, and occasional showers.&lt;/p&gt;

&lt;p&gt;After the first coat I sanded the surface using a random orbital sander with 320 grit discs, and the edges by hand. The second coat was smoother and I sanded it by hand with 400 grit sandpaper. Since this lacquer cannot dissolve previous coats, sanding is necessary to make subsequent coats stick. After sanding, I removed the sawdust by using the spray gun as a blower and wiping over the cracks with a dry microfibre cloth. It’s necessary to wait about 2 hours between spraying and sanding. Over one weekend of 3 nights and 2 days I was able to do all 5 applications, including all the preparation and cleanup.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/finished-1280-e86b65010.jpg&quot; srcset=&quot;/generated/assets/img/finished-320-e86b65010.webp 320w, /generated/assets/img/finished-480-e86b65010.webp 480w, /generated/assets/img/finished-640-e86b65010.webp 640w, /generated/assets/img/finished-960-e86b65010.webp 960w, /generated/assets/img/finished-1280-e86b65010.webp 1280w, /generated/assets/img/finished-1920-e86b65010.webp 1920w, /generated/assets/img/finished-2560-e86b65010.webp 2560w, /generated/assets/img/finished-3840-e86b65010.webp 3840w, /generated/assets/img/finished-4608-e86b65010.webp 4608w&quot; width=&quot;4608&quot; height=&quot;3456&quot; /&gt;

    &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;I thought it looked pretty awesome at this point, and I felt really satisfied because I had finished all the tasks which I wasn’t familiar with. The finish looks and feels great in my opinion. It’s really smooth visually and to the touch, preserves the natural colour of the wood, and as far as I can tell is very durable. It even has a strong tendency to resist dust, much more so than my old desk, which I suspect was finished with nitrocellulose lacquer. It took a few days to stop smelling like poison, and a week to fully harden and resist scratches.&lt;/p&gt;

&lt;h2 id=&quot;next-step-final-assembly&quot;&gt;Next step: final assembly&lt;/h2&gt;

&lt;p&gt;The finishing of the tabletop was now complete, so the next and final step was to assemble the desk. For this, as well as my overall reflections on the project, check out &lt;a href=&quot;/blogging/2021/02/20/new-desk-part-5-assembling-and-reflections.html&quot;&gt;part 5&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="blogging" /><category term="timber slab" /><category term="finishing" /><category term="lacquer" /><category term="conversion varnish" /><category term="acid catalysed lacquer" /><category term="spray gun" /><summary type="html">In part 3 of this series I ended up with a tabletop for my desk that was in its final shape, with smooth sanded surfaces, gaps filled, and nicely rounded corners. The next step was to apply a finish to the wood in order to protect it from the elements, and to enhance its aesthetic qualities including the appearance and texture.</summary></entry><entry><title type="html">Making a new desk (part 5): Assembly and final reflections</title><link href="https://www.danielplayfaircal.com/blogging/2021/02/20/new-desk-part-5-assembling-and-reflections.html" rel="alternate" type="text/html" title="Making a new desk (part 5): Assembly and final reflections" /><published>2021-02-20T00:10:00+11:00</published><updated>2021-02-20T00:10:00+11:00</updated><id>https://www.danielplayfaircal.com/blogging/2021/02/20/new-desk-part-5-assembling-and-reflections</id><content type="html" xml:base="https://www.danielplayfaircal.com/blogging/2021/02/20/new-desk-part-5-assembling-and-reflections.html">&lt;p&gt;In &lt;a href=&quot;/blogging/2021/02/20/new-desk-part-4-finishing.html&quot;&gt;part 4&lt;/a&gt; I wrote about the process of choosing and applying a finish to my timber slab desk tabletop. There was now only a ceremonial amount of work left to attach the tabletop to the frame, and my desk would be complete.&lt;/p&gt;

&lt;h2 id=&quot;attaching-the-frame&quot;&gt;Attaching the frame&lt;/h2&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/socket-1280-6995eda0f.jpg&quot; alt=&quot;Nobody knows what these cork screw things are called&quot; srcset=&quot;/generated/assets/img/socket-320-6995eda0f.webp 320w, /generated/assets/img/socket-480-6995eda0f.webp 480w, /generated/assets/img/socket-640-6995eda0f.webp 640w, /generated/assets/img/socket-960-6995eda0f.webp 960w, /generated/assets/img/socket-1280-6995eda0f.webp 1280w, /generated/assets/img/socket-1920-6995eda0f.webp 1920w, /generated/assets/img/socket-2560-6995eda0f.webp 2560w, /generated/assets/img/socket-3340-6995eda0f.webp 3340w&quot; width=&quot;3340&quot; height=&quot;1725&quot; /&gt;

    &lt;figcaption&gt;Nobody knows what these cork screw things are called&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Rather than screwing the frame directly into the slab, I used socket head screws as an intermediate layer between the screws and the wood. I used fast 5 minute curing epoxy to glue the sockets into holes in the slab. This was more effort, but I didn’t want any risk of cracking the slab, and I figured this way would distribute the force more evenly on a larger area of wood.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/legs-1280-2a767e7c4.jpg&quot; alt=&quot;The finished product&quot; srcset=&quot;/generated/assets/img/legs-320-2a767e7c4.webp 320w, /generated/assets/img/legs-480-2a767e7c4.webp 480w, /generated/assets/img/legs-640-2a767e7c4.webp 640w, /generated/assets/img/legs-960-2a767e7c4.webp 960w, /generated/assets/img/legs-1280-2a767e7c4.webp 1280w, /generated/assets/img/legs-1920-2a767e7c4.webp 1920w, /generated/assets/img/legs-2560-2a767e7c4.webp 2560w, /generated/assets/img/legs-3840-2a767e7c4.webp 3840w, /generated/assets/img/legs-4033-2a767e7c4.webp 4033w&quot; width=&quot;4033&quot; height=&quot;2946&quot; /&gt;

    &lt;figcaption&gt;The finished product&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;final-reflections&quot;&gt;Final reflections&lt;/h2&gt;

&lt;p&gt;Wow, this was a long journey! The whole project took a lot longer and was much more expensive than I expected (or cared to admit) before I started. Truthfully, I knew it would be a challenge and would take a long time – I had no detailed plan when I started, so I knew I would only know at the end what it would take. Buying a massive chunk of wood was a kind of forcing function – a way of committing myself to the project.&lt;/p&gt;

&lt;h3 id=&quot;cost&quot;&gt;Cost&lt;/h3&gt;

&lt;p&gt;An incomplete set of approximate costs (AUD):&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Desk frame: $700&lt;/li&gt;
  &lt;li&gt;Timber slab (cut and dressed): $600&lt;/li&gt;
  &lt;li&gt;Melamine for the mould: $39&lt;/li&gt;
  &lt;li&gt;Epoxy: $150&lt;/li&gt;
  &lt;li&gt;Sanding disks and foam backing pads: $150&lt;/li&gt;
  &lt;li&gt;Finishing products: $260&lt;/li&gt;
  &lt;li&gt;Spray gun, masks, and goggles: $150&lt;/li&gt;
  &lt;li&gt;Fastenings for assembly: $40&lt;/li&gt;
  &lt;li&gt;Access to many tools and materials that I already had or borrowed, about 100 hours of my time, and 20 hours of Bruno’s time: priceless&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That’s a total of about $2089. If I remember correctly, Go Natural Timbers suggested a ballpark figure of $2500 for the cost of producing the tabletop themselves. This number was slightly shocking to me when I heard it, but having done this project I have a new appreciation for the costs that would be involved. A professional workshop can no doubt have many of the materials much cheaper. For example, I bought packs of 10 sanding disks of each grit only to use 1-2, and a 4 litre pack of epoxy to use only 2 litres. They would buy everything in large quantities and only use as much as necessary for each job. But on the other hand they have to pay for the labour, maintain a workshop, etc, and turn a profit. Overall I probably saved a small proportion of the cost by doing most of the work myself, but I definitely wouldn’t embark on this kind of project to save money!&lt;/p&gt;

&lt;h3 id=&quot;experience&quot;&gt;Experience&lt;/h3&gt;

&lt;p&gt;There were a lot of challenges but I loved every bit. I learned how to use a number of new tools, including a belt sander, random orbital sander (I now also know what that is), spray gun, and blowtorch. I learned about the different types of epoxy and how to use them, and about the different types of wood finishes. I only wish that I had a degree in chemistry so I could understand the ingredients in epoxy and finishing products.&lt;/p&gt;

&lt;h3 id=&quot;result&quot;&gt;Result&lt;/h3&gt;

&lt;p&gt;In my opinion, my new desk is awesome, and it serves its purpose wonderfully. I feel much more comfortable using it than my old desk thanks to the adjustable height and the ability to stand, and the quality of the surface is as good as I could have hoped.&lt;/p&gt;

&lt;p&gt;Besides its utility, It looks beautiful. This is mostly just down to it being made from a huge piece of wood – but I’m happy that I didn’t fuck it up too much. Whenever I am bored, or waiting for code to compile, I gaze at the grain and try to imagine the tree and how it grew that way.&lt;/p&gt;

&lt;p&gt;Despite that it has many imperfections. There are filled cracks where the epoxy is permanently soft, delaminations between layers of epoxy, cracks that were not filled, epoxy shrinkage, bubbles, a splotchy surface on the edges, a minor warp, and probably more issues that I’ve forgotten or haven’t noticed. But none of these things ruin it. They remind me that I made it myself.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/success-1280-38c66e641.jpg&quot; srcset=&quot;/generated/assets/img/success-320-38c66e641.webp 320w, /generated/assets/img/success-480-38c66e641.webp 480w, /generated/assets/img/success-640-38c66e641.webp 640w, /generated/assets/img/success-960-38c66e641.webp 960w, /generated/assets/img/success-1280-38c66e641.webp 1280w, /generated/assets/img/success-1920-38c66e641.webp 1920w, /generated/assets/img/success-2560-38c66e641.webp 2560w, /generated/assets/img/success-3840-38c66e641.webp 3840w, /generated/assets/img/success-4032-38c66e641.webp 4032w&quot; width=&quot;4032&quot; height=&quot;3024&quot; /&gt;

    &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;</content><author><name></name></author><category term="blogging" /><category term="timber slab" /><summary type="html">In part 4 I wrote about the process of choosing and applying a finish to my timber slab desk tabletop. There was now only a ceremonial amount of work left to attach the tabletop to the frame, and my desk would be complete.</summary></entry><entry><title type="html">Correcting lens distortion using FFMpeg</title><link href="https://www.danielplayfaircal.com/blogging/ffmpeg/lensfun/v360/lenscorrection/fisheye/dodgeball/2020/03/24/correcting-lens-distortion-with-ffmpeg.html" rel="alternate" type="text/html" title="Correcting lens distortion using FFMpeg" /><published>2020-03-24T19:22:00+11:00</published><updated>2020-03-24T19:22:00+11:00</updated><id>https://www.danielplayfaircal.com/blogging/ffmpeg/lensfun/v360/lenscorrection/fisheye/dodgeball/2020/03/24/correcting-lens-distortion-with-ffmpeg</id><content type="html" xml:base="https://www.danielplayfaircal.com/blogging/ffmpeg/lensfun/v360/lenscorrection/fisheye/dodgeball/2020/03/24/correcting-lens-distortion-with-ffmpeg.html">&lt;p&gt;In recent less apocalyptic times, I used to play dodgeball - a team sport involving throwing foam balls at members of the opposing team. I hope that the COVID-19 outbreak passes soon and I can play it again, but in the meantime the closest I can get is watching videos of it and doing image processing on them. Our team records our matches for later analysis using a GoPro camera. The game is played in a rectangular court surounded by a net, and we mount the camera in the corner of the net so that the net does not obstruct the camera’s view of the court, and the camera’s field of view includes the entire court.&lt;/p&gt;

&lt;p&gt;There are a number of issues with the recorded video which I wanted to fix:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The lens is a fisheye lens, and the captured video contains barrel distortion. This is not good for watching balls being thrown, because it makes it difficult to see if the trajectory of the ball was a straight line, or a curve.&lt;/li&gt;
  &lt;li&gt;The net that the camera is attached to is somewhat flexible and is frequently hit by balls and players. This causes the camera to shake violently, which makes for shaky videos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For this post, I’ll focus on just the first issue of lens distortion.&lt;/p&gt;

&lt;p&gt;I decided to make a first attempt using FFMpeg. FFMpeg is easy to get started with since it has a CLI and doesn’t require writing any code. It can read and write basically any media format, and also has a selection of &lt;a href=&quot;https://ffmpeg.org/ffmpeg-filters.html&quot;&gt;filters&lt;/a&gt; that can be used to transform videos, some of which seemed relevant to my task. It’s also open source, which means it’s yours to do what you want with.&lt;/p&gt;

&lt;p&gt;To test the various filters, I took a picture of the OpenCV chessboard calibration pattern, which looks like this:&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/chess-pattern-1280-b266027a8.jpg&quot; alt=&quot;OpenCV chessboard pattern&quot; srcset=&quot;/generated/assets/img/chess-pattern-320-b266027a8.webp 320w, /generated/assets/img/chess-pattern-480-b266027a8.webp 480w, /generated/assets/img/chess-pattern-640-b266027a8.webp 640w, /generated/assets/img/chess-pattern-960-b266027a8.webp 960w, /generated/assets/img/chess-pattern-1280-b266027a8.webp 1280w, /generated/assets/img/chess-pattern-1754-b266027a8.webp 1754w&quot; width=&quot;1754&quot; height=&quot;1240&quot; /&gt;

    &lt;figcaption&gt;OpenCV chessboard pattern&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The photo of the pattern (which was on a TV screen, which is flat), looks like this:&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/chess-raw-320-fce7a4d55.jpg&quot; alt=&quot;Original photo of chessboard pattern&quot; srcset=&quot;/generated/assets/img/chess-raw-320-fce7a4d55.webp 320w&quot; width=&quot;320&quot; height=&quot;240&quot; /&gt;

    &lt;figcaption&gt;Original photo of chessboard pattern&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;If you didn’t know that the test image was a chess board, it wouldn’t be obvious that in real life its all straight lines and right angles. My aim is to take this image from the camera, and produce an output that looks (geometrically) like the test image.&lt;/p&gt;

&lt;h2 id=&quot;lenscorrection-filter&quot;&gt;lenscorrection filter&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://ffmpeg.org/ffmpeg-filters.html#toc-lenscorrection&quot;&gt;lenscorrection&lt;/a&gt; filter warps the image to correct for lens distortion according to the supplied parameters appropriate for the camera and lens. It acceps two parameters &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;k_1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.84444em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;and &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;k_2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.84444em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, which correspond to a quadratic and cubic correction factor applied to the radius of a pixel from the center of the image.&lt;/p&gt;

&lt;h3 id=&quot;stack-overflow&quot;&gt;Stack overflow&lt;/h3&gt;
&lt;p&gt;Obviously I’m not the first person to have this problem, and consequently I found a &lt;a href=&quot;https://stackoverflow.com/questions/30832248/is-there-a-way-to-remove-gopro-fisheye-using-ffmpeg&quot;&gt;stack overflow&lt;/a&gt; thread where other people had posted various values for the same and slightly different cameras. Most of these did not work well at all, but one of them worked somewhat:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ffmpeg -i chess-raw.png -vf lenscorrection=k1=-0.227:k2=-0.022 chess-lenscorrection-so.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/chess-lenscorrection-so-320-cc82636f3.jpg&quot; alt=&quot;chessboard corrected with lenscorrection filter using parameters from stack overflow&quot; srcset=&quot;/generated/assets/img/chess-lenscorrection-so-320-cc82636f3.webp 320w&quot; width=&quot;320&quot; height=&quot;240&quot; /&gt;

    &lt;figcaption&gt;chessboard corrected with lenscorrection filter using parameters from stack overflow&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;You could reasonably say that this is much worse than the raw image, even though in a sense it is closer to the ideal.&lt;/p&gt;

&lt;h3 id=&quot;hugin&quot;&gt;Hugin&lt;/h3&gt;

&lt;p&gt;I tried to use the Hugin lens calibration tool to find suitable values of &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;k_1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.84444em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;k_2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.84444em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. The model of lens distortion that the lenscorrection filter uses is called poly5, and the value of &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;r_d&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.58056em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.33610799999999996em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (the radius in the original distorted image) is given as a function of &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;r_u&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.58056em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (the radius in the corrected output image) as follows:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;/msub&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;msubsup&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msubsup&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;msubsup&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;/msubsup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;
r_d=r_u(1+k_1r_u^2+k_2r_u^4)
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.58056em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.33610799999999996em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.1111079999999998em;vertical-align:-0.247em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8641079999999999em;&quot;&gt;&lt;span style=&quot;top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.113em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.247em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.1141079999999999em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8641079999999999em;&quot;&gt;&lt;span style=&quot;top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.113em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.247em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Meanwhile, Hugin uses the following model (which is called ptlens):&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;⋅&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;msubsup&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/msubsup&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;msubsup&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msubsup&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mtext&gt;−&lt;/mtext&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mtext&gt;−&lt;/mtext&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mtext&gt;−&lt;/mtext&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;
r_d=r_u⋅(ar_u^3+br_u^2+cr_u+1−a−b−c)
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.58056em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.33610799999999996em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.59445em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;⋅&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.1141079999999999em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8641079999999999em;&quot;&gt;&lt;span style=&quot;top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.113em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.247em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.1111079999999998em;vertical-align:-0.247em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8641079999999999em;&quot;&gt;&lt;span style=&quot;top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.113em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.247em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.73333em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;To try to find common ground between these two models, we need to dispense with &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;k_2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.84444em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, because there is no &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msubsup&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mn&gt;5&lt;/mn&gt;&lt;/msubsup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;r_u^5&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.061108em;vertical-align:-0.247em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141079999999999em;&quot;&gt;&lt;span style=&quot;top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.247em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; term in ptlens. Similarly &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;a&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.43056em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;a&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;c&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.43056em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;c&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; have to go, because there is no &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msubsup&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msubsup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;r_u^2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.061108em;vertical-align:-0.247em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141079999999999em;&quot;&gt;&lt;span style=&quot;top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.247em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; or &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msubsup&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;/msubsup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;r_u^4&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.061108em;vertical-align:-0.247em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141079999999999em;&quot;&gt;&lt;span style=&quot;top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.247em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; term in poly5. So setting &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;k_2=a=c=0&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.84444em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.43056em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.43056em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.64444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; the two equations simplify to the following:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;/msub&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;msubsup&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msubsup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;
r_d=r_u(1+k_1r_u^2)
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.58056em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.33610799999999996em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.1141079999999999em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8641079999999999em;&quot;&gt;&lt;span style=&quot;top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.113em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.247em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;⋅&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;msubsup&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msubsup&gt;&lt;mtext&gt;−&lt;/mtext&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;
r_d=r_u⋅(1+br_u^2−b)
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.58056em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.33610799999999996em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.59445em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;⋅&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222222222222222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.1141079999999999em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8641079999999999em;&quot;&gt;&lt;span style=&quot;top:-2.4530000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.113em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.247em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;If &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;b=k_1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.69444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.84444em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, these equations are “almost” the same. Unfortunately I couldn’t get rid of the &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;br_u&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.84444em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.151392em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;u&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; term, but this is the closest thing I could find to an equivalence between the two models. Presumeably, the mismatched linear term would simply scale the image. So I took some pictures of apartment blocks and asked Hugin to find a ptlens model using only &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;b&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.69444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;b&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;. Hugin gave the value &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;0.08101&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;-0.08101&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.72777em;vertical-align:-0.08333em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, so I used that value as &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;k_1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.84444em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.30110799999999993em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; in the lenscorrection filter. This was the result:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ffmpeg -i chess-raw.png -vf lenscorrection=k1=-0.08101:k2=0 chess-lenscorrection-hugin.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/chess-lenscorrection-hugin-320-d2999c068.jpg&quot; alt=&quot;chessboard corrected with lenscorrection filter using parameters from Hugin&quot; srcset=&quot;/generated/assets/img/chess-lenscorrection-hugin-320-d2999c068.webp 320w&quot; width=&quot;320&quot; height=&quot;240&quot; /&gt;

    &lt;figcaption&gt;chessboard corrected with lenscorrection filter using parameters from Hugin&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Obviously, this didn’t work well at all. I’m not sure where I went wrong.&lt;/p&gt;

&lt;p&gt;This filter is simple and reasonably fast, but I could not find values for &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;k1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.69444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;k2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.69444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; which did a particularly good job of correcting for the distortion on my camera. Also, it only performs nearest neighbour interpolation, which results in visible aliasing in the output (I resized the images to 320x240 so that this is obvious).&lt;/p&gt;

&lt;h2 id=&quot;lensfun-filter&quot;&gt;lensfun filter&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;https://ffmpeg.org/ffmpeg-filters.html#toc-lensfun&quot;&gt;lensfun filter&lt;/a&gt; is a wrapper for the &lt;a href=&quot;https://lensfun.github.io/&quot;&gt;lensfun library&lt;/a&gt;, which performs correction for many types of lens distortion including barrel distortion. It also includes a database of cameras and lenses and their measured characteristics. I found that the latest development version had a &lt;a href=&quot;https://github.com/lensfun/lensfun/blob/4877512696c72072065dbee74c77f66f895a5d2e/data/db/actioncams.xml#L204-L216&quot;&gt;database entry&lt;/a&gt; for the GoPro HERO5 Black camera that I was using.&lt;/p&gt;

&lt;p&gt;After some experimentation, I worked out that the parameters in the database were appropriate only for certain camera settings. The camera has a “Field of View” setting, with 3 different settings using a fisheye projection (more specifically, an imperfect stereographic projection, as I learned from the lensfun database), and also a “linear” setting (which results in standard rectilinear projection, but with a much smaller field of view). The camera also has a video stabilisation feature which results in a 10% crop of the recorded video (although the stabilisation itself did not work well). I found that selecting the “Wide” setting and turning off the stabilisation resulted in a video that was correctly undistorted by lensfun using the parameters in the database.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ffmpeg -i chess-raw.png -vf 'lensfun=make=GoPro:model=HERO5 Black:lens_model=fixed lens:mode=geometry:target_geometry=rectilinear' chess-lensfun.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/chess-lensfun-320-afd9e2c02.jpg&quot; alt=&quot;chessboard corrected with lensfun&quot; srcset=&quot;/generated/assets/img/chess-lensfun-320-afd9e2c02.webp 320w&quot; width=&quot;320&quot; height=&quot;240&quot; /&gt;

    &lt;figcaption&gt;chessboard corrected with lensfun&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;scale-parameter&quot;&gt;scale parameter&lt;/h3&gt;
&lt;p&gt;Correcting for geometric lens distortion is a process that warps the image - i.e. it “moves” pixels from the source image to a different location in the destination image - or put another way, it maps pixels in the destination image to a different point in the source image. This means that the rectangular source image will not necessarily be mapped to a rectangle in the destination image. So there is a compromise to be made when choosing the scale of the output - either the output can be rectangular and have no blank areas (at the expense of discarding some of the input image), or it can include the entire input image (at the expense of having some blank areas in the output). Lensfun has a parameter called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scale&lt;/code&gt; which controls this compromise. Unfortunately the FFMpeg filter wrapping lensfun did not have such an option. So I made a &lt;a href=&quot;http://ffmpeg.org/pipermail/ffmpeg-devel/2019-March/241521.html&quot;&gt;patch&lt;/a&gt; to add the option and pass it through to lensfun. This patch has been applied (hooray), so the following now works:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ffmpeg -i chess-raw.png -vf 'lensfun=make=GoPro:model=HERO5 Black:lens_model=fixed lens:mode=geometry:target_geometry=rectilinear:scale=0.4' chess-lensfun-scaled.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/chess-lensfun-scaled-320-7e779ed4c.jpg&quot; alt=&quot;chessboard corrected with lensfun, scaled to display entire input&quot; srcset=&quot;/generated/assets/img/chess-lensfun-scaled-320-7e779ed4c.webp 320w&quot; width=&quot;320&quot; height=&quot;240&quot; /&gt;

    &lt;figcaption&gt;chessboard corrected with lensfun, scaled to display entire input&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3 id=&quot;interpolation&quot;&gt;interpolation&lt;/h3&gt;
&lt;p&gt;The default interpolation is bilinear, which is acceptable, and looks much better than the nearest neighbour interpolation as used in the lenscorrection filter. But lensfun also supports lanczos interpolation, which in theory should be better. I suspect there is a bug in it though, because the result doesn’t look as good as the default:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ffmpeg -i chess-raw.png -vf 'lensfun=make=GoPro:model=HERO5 Black:lens_model=fixed lens:mode=geometry:target_geometry=rectilinear:interpolation=lanczos' chess-lensfun-lanczos.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/chess-lensfun-lanczos-320-9bce8356b.jpg&quot; alt=&quot;chessboard corrected with lensfun, using lanczos interpolation&quot; srcset=&quot;/generated/assets/img/chess-lensfun-lanczos-320-9bce8356b.webp 320w&quot; width=&quot;320&quot; height=&quot;240&quot; /&gt;

    &lt;figcaption&gt;chessboard corrected with lensfun, using lanczos interpolation&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The lensfun filter is significantly slower than the lenscorrection filter, but did a much better job (more accurate corrections, and better interpolation). It also provides the ability to choose from multiple projections for the output (e.g. correct for the imperfections in the lens but maintain the stereographic projection, or output a equirectangular projection instead, etc), which I found interesting.&lt;/p&gt;

&lt;h2 id=&quot;aside-interesting-learnings-about-lens-distortion-and-projections&quot;&gt;Aside: interesting learnings about lens distortion and projections&lt;/h2&gt;

&lt;p&gt;The term “distortion” comes with a negative connotation, but there are many reasonable ways to project a view of a 3D world onto a 2D image, each with different compromises. These projections are mappings from the angle at which light enters the camera lens &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;θ&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\theta&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.69444em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;θ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (relative to the direction the lens is facing), to a distance &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;r&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.43056em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (r for radius) from the center of the image. For example:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;rectilinear projection &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;θ&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;r=tan(\theta)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.43056em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;θ&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;: straight lines in the world appear straight in the image, but areas far from the center are stretched alot, and it is impossible to diplay points 90 degrees or more from the center (i.e. the image cannot show what is directly to the side or behind the camera). Most images use this projection, and most image processing algorithms assume that it is used.&lt;/li&gt;
  &lt;li&gt;stereographic projection &lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;θ&lt;/mi&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;/&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;r=2tan(\theta/2)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.43056em;vertical-align:0em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.02778em;&quot;&gt;θ&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (approximately what the GoPro HERO5 Black produces with the “wide” FoV setting): Maintains angles as seen from the lens, does not stretch the edges of the image as much as the rectilinear projection, and works for any angle under 180 degrees (i.e. any direction except directly backwards). Does not maintain straight lines.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are many other projections - see the &lt;a href=&quot;https://lensfun.github.io/manual/latest/group__Lens.html#gac853bb55ada6a58f12a68f6a1974f764&quot;&gt;lensfun list of projections&lt;/a&gt; and Wikipedia’s &lt;a href=&quot;https://en.wikipedia.org/wiki/Fisheye_lens#Mapping_function&quot;&gt;fisheye lens&lt;/a&gt; article.&lt;/p&gt;

&lt;p&gt;Similarly, there are many different models for correcting the projection produced by real cameras and lenses (which may not be a simple mathematical formula) to suit one of the standard projections. These are usually polynomials applied to the radius of a pixel. Lensfun supports &lt;a href=&quot;https://lensfun.github.io/manual/latest/group__Lens.html#gaa505e04666a189274ba66316697e308e&quot;&gt;4 different models&lt;/a&gt; for example. The lenscorrection filter appears to use the same model as lensfun’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LF_DIST_MODEL_POLY5&lt;/code&gt;. The lensfun &lt;a href=&quot;https://github.com/lensfun/lensfun/blob/4877512696c72072065dbee74c77f66f895a5d2e/data/db/actioncams.xml#L204-L216&quot;&gt;database entry&lt;/a&gt; for my camera uses the different &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LF_DIST_MODEL_POLY3&lt;/code&gt; model. Lensfun makes a relatively small correction to convert the image to a standard stereographic projection before separately converting it to the rectilinear projection.&lt;/p&gt;

&lt;h2 id=&quot;v360-filter&quot;&gt;v360 filter&lt;/h2&gt;
&lt;p&gt;After I did most of these experiments, the &lt;a href=&quot;https://ffmpeg.org/ffmpeg-filters.html#v360&quot;&gt;v360 filter&lt;/a&gt; was added to ffmpeg, which is very exciting. Like lensfun, it can convert between various common projections. Unlike lensfun, it does not do polynomial corrections to account for real world differences from standard projections, and it does not have a database of cameras and lenses. Instead, there are parameters to specify the standard projection and field of view of the input, and of the output. I found that the GoPro website &lt;a href=&quot;https://gopro.com/help/articles/question_answer/HERO5-Black-Field-of-View-FOV-Information&quot;&gt;helpfully lists&lt;/a&gt; the horizontal, diagonal, and vertical field of view for each of the field of view settings on my camera, and I know from reading the lensfun database that my camera creates images that are closest to a stereographic projection.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ffmpeg -i chess-raw.png -vf 'v360=input=sg:ih_fov=122.6:iv_fov=94.4:output=flat:d_fov=149.2:pitch=-90:w=320:h=240' chess-v360.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/chess-v360-320-e095e799c.jpg&quot; alt=&quot;chessboard corrected with v360, scaled to display entire input&quot; srcset=&quot;/generated/assets/img/chess-v360-320-e095e799c.webp 320w&quot; width=&quot;320&quot; height=&quot;240&quot; /&gt;

    &lt;figcaption&gt;chessboard corrected with v360, scaled to display entire input&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;This is not perfect (since my camera does not produce a perfect stereographic projection), but in my opinion it doesn’t look too bad. The curviness is less noticeable in the central area of the image, so if you adjust the output field of view enough that there are no unmapped areas, it looks better:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ffmpeg -i chess-raw.png -vf 'v360=input=sg:ih_fov=122.6:iv_fov=94.4:output=flat:d_fov=121:pitch=-90:w=320:h=240' chess-v360-zoom.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/chess-v360-zoom-320-27e5de59f.jpg&quot; alt=&quot;chessboard corrected with v360, scaled to fill entire output&quot; srcset=&quot;/generated/assets/img/chess-v360-zoom-320-27e5de59f.webp 320w&quot; width=&quot;320&quot; height=&quot;240&quot; /&gt;

    &lt;figcaption&gt;chessboard corrected with v360, scaled to fill entire output&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Roughly, v360 works in three stages. Firstly, it maps each input pixel to a vector, which represents the direction where the light came from (this is the inverse of the input projection). Then it optionally changes the camera angle according to the yaw/pitch/roll options (i.e. the direction vector for each pixel is rotated equally). This is different from cropping/translating the projected image because it moves the center of the image which all the projections are relative to. As a result, the resulting projected image looks exactly like it would have looked if the camera was facing in a different direction. The final step is to map these vectors to the destination image according to the chosen output projection and field of view. Here’s an example of using the rotation parameters to turn the virtual camera downwards by 15 degrees:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ffmpeg -i chess-raw.png -vf 'v360=input=sg:ih_fov=122.6:iv_fov=94.4:output=flat:d_fov=149.2:pitch=-105:w=320:h=240' chess-v360-down.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/chess-v360-down-320-3648e9fdf.jpg&quot; alt=&quot;chessboard corrected with v360, rotated down by 15 degrees&quot; srcset=&quot;/generated/assets/img/chess-v360-down-320-3648e9fdf.webp 320w&quot; width=&quot;320&quot; height=&quot;240&quot; /&gt;

    &lt;figcaption&gt;chessboard corrected with v360, rotated down by 15 degrees&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;When I originally wrote this post, I found a few small but annoying bugs in the filter, which &lt;a href=&quot;#bug-update&quot;&gt;have since been fixed&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Although it can deduce the horizontal/vertical field of view if only the diagonal field of view is privided, it did not correctly do this unless the input projection was “fisheye” or “flat” (rectilinear), because that code &lt;a href=&quot;https://github.com/FFmpeg/FFmpeg/blob/c455a28a9e99d41d070be887228aa8609543b9a8/libavfilter/vf_v360.c#L3542-L3569&quot;&gt;was not implemented at the time&lt;/a&gt;. I worked around this problem by directly providing the horizontal and vertical field of view as parameters.&lt;/li&gt;
  &lt;li&gt;The stereographic projection had a built in pitch of 90 degrees, so if the input was stereographic, one had to use a pitch of -90 degrees to prevent the virtual camera from facing upwards instead of forwards.&lt;/li&gt;
  &lt;li&gt;The yaw and roll options both seemed to perform roll (i.e. twisting the camera lens) - while yaw was impossible (turning the camera sideways).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also found some limitations (which remain):&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The default output image dimensions are not sane.&lt;/li&gt;
  &lt;li&gt;The scale of the output is determined but the output field of view, so it is up to you to determine what that should be.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Despite not performing polynomial corrections and not having a database of lenses, v360 has a few advantages over lensfun. It is much faster, perhaps due to the presence of a SIMD optimised implementation in assembly. The rotations are useful if the camera wasn’t facing quite the right way, and produce much better output in this case than cropping. The lanczos interpolation works well. Its scope is smaller than lensfun and the code in my opinion is easier to read, if you like doing that.&lt;/p&gt;

&lt;h2 id=&quot;speed-quality-features-pick-2&quot;&gt;Speed, quality, features: pick 2&lt;/h2&gt;

&lt;p&gt;If you don’t care about speed, you could use both lensfun (to perform accurate correction for a particular real world lens), and v360 (to use its perspective rotation feature):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ffmpeg -i chess-raw.png -vf 'lensfun=make=GoPro:model=HERO5 Black:lens_model=fixed lens:mode=geometry:target_geometry=fisheye_stereographic,v360=input=sg:ih_fov=122.6:iv_fov=94.4:output=flat:d_fov=140:pitch=-105:w=320:h=240' chess-lensfun-v360.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/chess-lensfun-v360-320-b412ae2f5.jpg&quot; alt=&quot;chessboard corrected with lensfun, and rotated with v360&quot; srcset=&quot;/generated/assets/img/chess-lensfun-v360-320-b412ae2f5.webp 320w&quot; width=&quot;320&quot; height=&quot;240&quot; /&gt;

    &lt;figcaption&gt;chessboard corrected with lensfun, and rotated with v360&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;For my use case, I’ve found that using v360 is the best compromise. My camera produces images that are close enough to the stereographic projection that if I convert them to rectilinear using v360 they appear straight, at least if you aren’t thinking about lens distortion. The perspective rotation feature is useful if the camera wasn’t quite level, the interpolation works well, and it is faster than lensfun. The right compromise depends on your needs.&lt;/p&gt;

&lt;p&gt;In the future, I might write a similar post about video stabilisation. I’m also currently working on a project using libavcodec, OpenCL, and OpenCV that I hope will be capable of video decoding, lens correction, stabilisation, and reencoding all on the GPU, which should be much faster than all these methods which run on the CPU.&lt;/p&gt;

&lt;figure class=&quot;image&quot;&gt;
    &lt;img src=&quot;/generated/assets/img/zany-action-1080-5edb62a2f.jpg&quot; srcset=&quot;/generated/assets/img/zany-action-320-5edb62a2f.webp 320w, /generated/assets/img/zany-action-480-5edb62a2f.webp 480w, /generated/assets/img/zany-action-640-5edb62a2f.webp 640w, /generated/assets/img/zany-action-960-5edb62a2f.webp 960w, /generated/assets/img/zany-action-1080-5edb62a2f.webp 1080w&quot; width=&quot;1080&quot; height=&quot;771&quot; /&gt;

    &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;update-april-11-2020&quot;&gt;&lt;a name=&quot;bug-update&quot;&gt;&lt;/a&gt;Update (April 11, 2020)&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;updated the section on the v360 filter to point out that the bugs I found when I wrote this post have been fixed&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="blogging" /><category term="ffmpeg" /><category term="lensfun" /><category term="v360" /><category term="lenscorrection" /><category term="fisheye" /><category term="dodgeball" /><summary type="html">In recent less apocalyptic times, I used to play dodgeball - a team sport involving throwing foam balls at members of the opposing team. I hope that the COVID-19 outbreak passes soon and I can play it again, but in the meantime the closest I can get is watching videos of it and doing image processing on them. Our team records our matches for later analysis using a GoPro camera. The game is played in a rectangular court surounded by a net, and we mount the camera in the corner of the net so that the net does not obstruct the camera’s view of the court, and the camera’s field of view includes the entire court.</summary></entry><entry><title type="html">Adventures making gnome-shell run in Valgrind: part 1</title><link href="https://www.danielplayfaircal.com/blogging/gnome/dconf/2019/12/30/running-gnome-shell-in-valgrind.html" rel="alternate" type="text/html" title="Adventures making gnome-shell run in Valgrind: part 1" /><published>2019-12-30T20:13:20+11:00</published><updated>2019-12-30T20:13:20+11:00</updated><id>https://www.danielplayfaircal.com/blogging/gnome/dconf/2019/12/30/running-gnome-shell-in-valgrind</id><content type="html" xml:base="https://www.danielplayfaircal.com/blogging/gnome/dconf/2019/12/30/running-gnome-shell-in-valgrind.html">&lt;p&gt;There is a nasty sort of bug that can occur in languages without memory safety - bugs where memory is accessed incorrectly. There are a few reasons why these bugs are nasty, worse than many other types of bugs:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The consequences are often severe (usually the entire process crashes, or worse behaves unpredictably).&lt;/li&gt;
  &lt;li&gt;They often create security vulnerabilities.&lt;/li&gt;
  &lt;li&gt;They are difficult to debug. The symptoms may appear intermittently, and may manifest far away from the cause.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;gnome-shell-crashes&quot;&gt;gnome-shell crashes&lt;/h2&gt;

&lt;p&gt;I came across such a bug in gnome-shell soon after the release of GNOME 3.24 in 2017. The symptom was that the gnome-shell process would crash a few times a day, at seemingly random times. Since I was using it as a Wayland compositor, this resulted in the entire session and all applications being closed. I was proud of my setup, having spent a few years working out how to completely avoid using Windows, and with a Linux setup using Wayland. Therefore, this bug was extremely annoying, and filled me with rage and an irrational desire to find and correct the problem at any cost.&lt;/p&gt;

&lt;p&gt;First I &lt;a href=&quot;https://bugs.archlinux.org/task/53582#comment156598&quot;&gt;reported&lt;/a&gt; the bug to the Arch Linux bug tracker. It was clear from the stacktrace that the crash was occuring in GJS, which is the GNOME Javascript runtime. Jan de Groot, the maintainer of the GJS package in Arch Linux, provided some test builds with different compilation flags, but these didn’t fix the problem. Soon after, a patch was provided by Philip Chimento, the upstream maintainer of GJS, to fix some memory access issues which he thought might be causing the bug. Some other users were satisfied that the problem was solved, but in my case the crashes kept happening. At this point it was clear to me that the problem did not lie in Arch Linux in particular, so I decided to engage with GJS upstream to try to debug the issue.&lt;/p&gt;

&lt;p&gt;In order to make useful bug reports, I had to learn how to do a few things:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Compile packages from source in Arch Linux, especially with debug symbols (so that stacktraces contained locations in source code, not hex addresses in binary blobs), and with patches (to test bugfixes).&lt;/li&gt;
  &lt;li&gt;Read system logs efficiently (filtering by unit, showing logs only from the last boot, etc).&lt;/li&gt;
  &lt;li&gt;Read coredump files to extract stacktraces from crashed process dumps&lt;/li&gt;
  &lt;li&gt;Use GDB to attach to a running process and examine the state in the event of a crash&lt;/li&gt;
  &lt;li&gt;Switch TTYs in order to use a terminal even if the entire shell/UI was unusable for some reason (e.g., it was paused on a breakpoint)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Over the next few weeks, there were &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=781194&quot;&gt;various&lt;/a&gt; &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=781799&quot;&gt;bug&lt;/a&gt; &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=783935&quot;&gt;reports&lt;/a&gt; of similar shell crashes. A series of patches appeared to fix the majority of those problems. All of these problems were intermittent and difficult to reproduce, and in most cases it appeared that the best the developer could do was to guess the cause and &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=785657#c20&quot;&gt;“[throw] patches into the void to see if they stick”&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;valgrind&quot;&gt;Valgrind&lt;/h2&gt;

&lt;p&gt;I don’t write much C code, but I remember that in first year university I learned how to debug improper memory access with &lt;a href=&quot;https://Valgrind.org/&quot;&gt;Valgrind&lt;/a&gt;. Valgrind runs your program and instruments memory access and allocation, providing warnings when your program accesses memory in incorrect or suspect ways. Where without Valgrind bad memory access &lt;em&gt;might&lt;/em&gt; cause a program to crash in unrelated code some indeterminate time in the future, with Valgrind it would cause an error to be logged immediately, including a stacktrace of the bad memory access. It’s hard to overstate how useful Valgrind is in these cases.&lt;/p&gt;

&lt;p&gt;There were two particular shell crash bugs which affected me and appeared to be the most difficult to fix, and on both those tickets the &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=783935#c10&quot;&gt;developers&lt;/a&gt; &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=785657#c97&quot;&gt;suggested&lt;/a&gt; that users who were able to reproduce the bug should run the shell under Valgrind and post a log. This would provide a clear indication to the developer of what caused the problem, even if they were not able to easily reproduce the bug.&lt;/p&gt;

&lt;p&gt;This sounded easy - find the command used to run the shell, and put &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Valgrind&lt;/code&gt; in front of it. Unfortunately, it was not so simple:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;code in various packages called from the same process triggered enormous quantities of Valgrind warnings. All these packages had to be compiled from source with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--enable-valgrind&lt;/code&gt; argument to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;configure&lt;/code&gt; or similar. This made the compiled binaries include special Valgrind annotations with exceptions for code that intentionally did things that triggered Valgrind warnings. In some cases that didn’t work and it was necessary to find a Valgrind suppression file elsewhere and use it manually when running Valgrind.&lt;/li&gt;
  &lt;li&gt;Running the shell directly did not have the same effect as running it from within a session (gnome-session). To have the shell work normally, it was necessary to create a session that ran the shell in Valgrind.&lt;/li&gt;
  &lt;li&gt;When gnome-shell was run as normal but in Valgrind, it tended to crash or hang and fail to start successfully. It turned out that the crashes/hangs happened reliably when the &lt;a href=&quot;https://github.com/zpydr/gnome-shell-extension-taskbar&quot;&gt;taskbar shell extension&lt;/a&gt; was in use - and also that the shell crash only happened when it was in use.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first two problems were easily (if tediously) solveable, but the hangs/crashes presented a more significant barrier. How to debug a problem if the debugging tools prevent the problem from hapenning? I wasn’t the only user with this problem - &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=783935#c11&quot;&gt;other&lt;/a&gt; &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=785657#c73&quot;&gt;users&lt;/a&gt; also reported that they tried and failed to collect a Valgrind log because the shell simply hung forever.&lt;/p&gt;

&lt;p&gt;This was sad to see - I assume that very many users had experienced the crash. A small proportion had found the stacktrace and looked up one of the bug reports. A smaller proportion had contributed useful information to them, and still less had attempted to reproduce the bug in Valgrind. These users could have provided the necessary information to solve the issue, but even that much effort was fruitless because Valgrind couldn’t easily be made to work.&lt;/p&gt;

&lt;h2 id=&quot;a-new-quest&quot;&gt;A new quest&lt;/h2&gt;

&lt;p&gt;This problem was demoralising but also motivational. I didn’t understand the inner workings of GJS or SpiderMonkey and was not in a position to understand or solve the specific problems that were causing these crashes. But I could see that the inability of users to collect Valgrind logs presented a significant barrier to fixing the issues. This would also be the case for any other bug caused by bad memory access in the gnome-shell process (which was alot of bugs, most of them very bad bugs).&lt;/p&gt;

&lt;p&gt;So my new quest was to discover why the shell did not run correctly under Valgrind. Nobody else seemed to know why that was the case or have enough time and interest to investigate it. I thought perhaps this could be evidence of deeper issues (code that doesn’t work in Valgrind probably doesn’t work reliably in general). Also, I thought that this was the underlying problem leading to the crashes, in a sense. There were various bugs observable in normal use and most of them were not directly caused by the Valgrind problem, but they were all difficult to fix as a result of the Valgrind problem, so in the long term the best path to fix such crashes was to fix the Valgrind issues so that memory access bugs could be diagnosed more easily.&lt;/p&gt;

&lt;p&gt;To continue my investigation, I had to learn the relationship between a number of projects that seemed related to this issue (and who’s code ran in the problematic gnome-shell process):&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.gnome.org/GNOME/dconf&quot;&gt;DConf&lt;/a&gt;: key/value database used for storing, reading, and subscribing to changes in user settings.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.gnome.org/GSettings/&quot;&gt;GSettings&lt;/a&gt;: Wraps DConf (at least on Linux) and provides a cross platform API for reading, writing, and subscribing to changes in user settings. This is the standard API used for this purpose in GNOME.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.gnome.org/GNOME/gjs&quot;&gt;GJS&lt;/a&gt;: The GNOME Javascript interpreter. Uses SpiderMonkey to run javascript in GNOME projects, and adds extra APIs including an interface to GSettings.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gitlab.gnome.org/GNOME/gnome-shell/&quot;&gt;gnome-shell&lt;/a&gt; and extensions: Implement the shell UI. Mostly the UI code is written in javascript, which is run by GJS, and uses the GSettings API to access user settings.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, I had to learn a few more debugging techniques:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Valgrind can be run such that it integrates with GDB, and provides breakpoints when bad memory access occurs (using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--vgdb&lt;/code&gt; flag)&lt;/li&gt;
  &lt;li&gt;Valgrind has a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--track-fds&lt;/code&gt; option, which logs a stacktrace whenever a file is opened&lt;/li&gt;
  &lt;li&gt;A stacktrace of the Javascript code in gnome-shell can be obtained from a running process by using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gjs_dumpstack&lt;/code&gt; function in GDB. This provides higher level context of what the process is doing (e.g. creating a clock widget as opposed to freeing a Javascript closure).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;symptom-1-immediate-crash&quot;&gt;Symptom 1: immediate crash&lt;/h2&gt;

&lt;p&gt;The most easily reproduceable problem when running the shell in Valgrind was a crash that occured immediately after starting the shell, before the UI was visible. I found two &lt;a href=&quot;https://bugzilla.redhat.com/show_bug.cgi?id=1441490&quot;&gt;open&lt;/a&gt; &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=782688&quot;&gt;tickets&lt;/a&gt; about similar issues with the same stacktrace (i.e. crashes in normal use, without Valgrind). I also found &lt;a href=&quot;https://bugzilla.redhat.com/show_bug.cgi?id=1349265&quot;&gt;other&lt;/a&gt; &lt;a href=&quot;https://bugzilla.redhat.com/show_bug.cgi?id=1398142&quot;&gt;tickets&lt;/a&gt; going back at least a year (all unsolved) with similar symptoms and the same stacktrace. The stacktrace looked something like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#0 xkb_keymap_ref at src/keymap.c:59
#1 clutter_evdev_set_keyboard_map at evdev/clutter-device-manager-evdev.c:2399
#2 meta_backend_native_set_keymap at backends/native/meta-backend-native.c:427
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In most of these cases, the issue was intermittent, and seemed to depend on the shell extensions installed. So it seemed like I had stumbled upon an opportunity, because I could reproduce the problem 100% reliably with Valgrind.&lt;/p&gt;

&lt;p&gt;I posted more detailed information about how I debugged the cause starting from &lt;a href=&quot;https://bugzilla.redhat.com/show_bug.cgi?id=1441490#c21&quot;&gt;this comment&lt;/a&gt;. What I discovered after alot of breakpoints and calls to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gjs_dumpstack&lt;/code&gt; was that:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;The crash occurred because a system call to create a timer was failing with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EMFILE&lt;/code&gt; (too many open files)&lt;/li&gt;
  &lt;li&gt;This timer was being opened in order to instantiate a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gnome.WallClock&lt;/code&gt; widget in JS land&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gnome.WallClock&lt;/code&gt; was being instantiated inside a callback for when user settings are changed&lt;/li&gt;
  &lt;li&gt;The open files limit was reached primarily because instances of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gnome.WallClock&lt;/code&gt; were instantiated repeatedly until the limit (on my system, 1024) was reached&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I felt that I was a step closer to understanding the problem, but It was not clear to me why that callback was being run so many times (Why would anyone want 1024 clock widgets? Why would a setting be changed 1024 times without any user input?). Without Valgrind, only a handful of the clock widgets were instantiated.&lt;/p&gt;

&lt;p&gt;At least now I had a way of working around the problem. If I commented out the code that instantiated a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Gnome.WallClock&lt;/code&gt;, the issue dissappeared. So I did that temporarily, and moved on to the next problem.&lt;/p&gt;

&lt;h2 id=&quot;symptom-2-hangs&quot;&gt;Symptom 2: hangs&lt;/h2&gt;

&lt;p&gt;The next problem was that the shell would hang when run in Valgrind with the taskbar extension enabled, and never reach the state where the UI was visible. The gnome-shell process was using 100% of a CPU core, so I assumed that the hang was caused by some sort of infinite loop.&lt;/p&gt;

&lt;p&gt;I created a &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=786186&quot;&gt;bug report&lt;/a&gt; for this behaviour. With alot of help from Philip Chimento I was able to use a mixture of pausing the process in GDB, breakpoints, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gjs_dumpstack&lt;/code&gt;, and JS log statements to find the loop (or at least, the most obvious loop). There is a DConf setting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;disable-extensions&lt;/code&gt; which controls whether or not to disable shell extensions that are not verified to work with the current gnome-shell version. There is code in gnome-shell that responds to changes of that setting. When it changes, all extensions are disabled, and then the appropriate set of extensions is enabled again.&lt;/p&gt;

&lt;p&gt;The problem was that the signal handler attached to changes of this setting was being called even though the setting had not actually changed. The loop happened because something that ran in the signal handler (e.g. in the process of disabling and reenabling all shell extensions) caused the original signal to be emitted again. The result was that the shell entered an infinite loop of disabling and reenabling all of the shell extensions.&lt;/p&gt;

&lt;p&gt;Subsequently I discovered an &lt;a href=&quot;https://bugzilla.redhat.com/show_bug.cgi?id=1464294&quot;&gt;existing bug report&lt;/a&gt; detailing a hang when running gnome-shell with the taskbar extension enabled on a BTRFS file system. My guess was that this was the same issue, and that in the right set of circumstances it could be triggered in normal use, without Valgrind.&lt;/p&gt;

&lt;p&gt;This discovery threw new light onto the first symptom. After investigating that symptom further, it became clear that a similar issue was to blame. Signal handlers were called to handle changed settings even though the settings had not changed, and they were called (directly or indirectly) from inside the same signal handlers. It just so happenned that one of the things done in one of the signal handlers involved creating a timer, and as a result hitting the open file limit was the first thing to break.&lt;/p&gt;

&lt;h2 id=&quot;symptom-3-duplicated-ui-widgets&quot;&gt;Symptom 3: duplicated UI widgets&lt;/h2&gt;

&lt;p&gt;When running the shell in Valgrind with the workaround for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xkb_keymap_ref&lt;/code&gt; crash and with the taskbar extension disabled, I also noticed that one of the widgets created by another of my shell extensions was duplicated many times. Instead of there being one item on the status bar with CPU temperatures, there were several. This wasn’t a large problem, but it later turned out that it was related.&lt;/p&gt;

&lt;h2 id=&quot;fixing-the-bug&quot;&gt;Fixing the bug&lt;/h2&gt;

&lt;p&gt;At this point I had found the nature of these various bugs and could explain why they occured. What remained was to determine how best to fix the problem.&lt;/p&gt;

&lt;p&gt;The most obvious solution was to follow a pattern that had already been used in most cases in the gnome-shell Javascript code, save for a few exceptions. Any callback to a signal about changed settings should first read the new value and check if it was different from the previous value, and return early if it had not changed, thereby avoiding any side effects. In this &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=788110&quot;&gt;bug report&lt;/a&gt; about the disable/enable extensions loop I posted some patches that did this. They solved the problem at least in some cases, but they didn’t seem like a good solution for a few reasons:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;They complicated the JS code, because whenever a signal handler was used, the value of the settings being listened to had to be stored in JS, duplicating the existing state in DConf.&lt;/li&gt;
  &lt;li&gt;They required all JS code run in the shell (including code in third party extensions) to consistently perform these checks. Even if I did find and fix all the problematic callbacks in gnome-shell and in all of the extensions available today, the problem would probably return in the future when new callbacks were added, and people assumed that a changed signal meant that a setting had actually changed.&lt;/li&gt;
  &lt;li&gt;They felt like a workaround made at the wrong level of abstraction. Why should high level single threaded JS code need to workaround spurious signals caused by compromises in multiprocess C code?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My next thought was to go one level down the stack, to GJS and its wrapped version of the Gio/GSettings API. I suggested that similar checks should be performed transparently in GJS so that signals were only sent to client code when the values had changed. Philip did not like this idea because it would mean that the GJS interface to Gio/GSettings would no longer be a thin wrapper with no added behaviour, and would instead be a different API with different behaviour, requiring separate documentation. This approach would increase the complexity of the system. This assessment seemed reasonable to me. So I turned my attention deeper into the stack.&lt;/p&gt;

&lt;h2 id=&quot;finding-the-cause-of-the-spurious-signals&quot;&gt;Finding the cause of the spurious signals&lt;/h2&gt;

&lt;p&gt;The various symptoms I had come across were not all triggered in the same way, as far as DConf/GSettings were concerned. I made two bug reports against GSettings:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=789639&quot;&gt;spurious changed signals about specific keys&lt;/a&gt; (two different types of stacktraces)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=790640&quot;&gt;spurious changed signals about all keys at once&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the time, DConf was (arguably) unmaintained. The original author and maintainer Allison Karlitskaya (formerly Allison Lortie, Ryan Lortie) appeared to have moved on from the project, and the only recent changes were related to the build system and not to functionality. Luckily two of the Glib maintainers, Mathias Clasen and Philip Withnall, helped me out. Mathias reviewed one of my patches, and Philip put me in contact with Allison, who reviewed one of the other patches. The first set of patches solved the problem, but also introduced other issues, from memory leaks to potential database consistency bugs.&lt;/p&gt;

&lt;p&gt;As a brief aside, DConf has the following architecture (simplified, as is relevant):&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;There is a single writer service, which maintains the canonical database state and is solely responsible for making changes to the database and writing it to disk. It responds to requests sent over D-Bus to change settings, and emits signals over D-Bus when settings change.&lt;/li&gt;
  &lt;li&gt;There is a library called “engine” that can be linked with client software to access the database. Reads are done directly from the database on disk, while requests to write or to subscribe to changes are submitted over D-Bus to the writer service.&lt;/li&gt;
  &lt;li&gt;The engine library presents an optimistic (as in, optimistic concurrency) API to GSettings. Reads are synchronous and are handled within the same thread/process, but writes and subscribe requests also succeed immediately - before the central writer service has received and responded to the request.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the help of Allison’s feedback, particularly relating to DConf’s consistency model, I identified 3 distinct fixable issues which caused spurious changed signals, and wrote a patch to address each:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;The central writer service emitted changed signals for keys that were written, even if the new value was the same as the old value. The fix was to not do that.&lt;/li&gt;
  &lt;li&gt;The engine library emitted changed signals optimistically when write requests were made from that process, even if the new value was the same as the old value (according to that process’s view of the database). Again the fix was to not do that.&lt;/li&gt;
  &lt;li&gt;The engine library emitted changed signals for all keys in the database if a write occured in between when a subscription was requested and when it was confirmed by the writer service (because of the possibility that the change should have caused a signal, but didn’t because the writer service had not yet created the subscription). The fix was to keep track of keys with in progress subscription requests in the engine, and emit changed signals only for those keys in this case.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;bug-fixed&quot;&gt;Bug fixed!&lt;/h2&gt;

&lt;p&gt;These fixes didn’t make it impossible for spurious changed signals to occur, but they made it much less likely, and even less likely for an infinite loop to occur as a result. I think they make it impossible for an infinite loop to occur unless the client code repeatedly sets keys to different values, or repeatedly subscribes and unsubscribes to the same key while writes are submitted at the same time (since otherwise an equilibrium would always be reached at a certain set of values and subscriptions).&lt;/p&gt;

&lt;p&gt;With all of these patches, I could run gnome-shell in Valgrind with the taskbar extension enabled, and it worked normally. Also, startup time was significantly faster on account of not repeatedly enabling and disabling all extensions on startup (which previously happened 2-4 times on each startup even without Valgrind). I also found that the third symptom of duplicated UI widgets was gone, and presumeably also a &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=721590&quot;&gt;similar issue&lt;/a&gt; with the Caja extension which had previously been traced to spurious GSettings signals.&lt;/p&gt;

&lt;h2 id=&quot;releasing-the-fixes&quot;&gt;Releasing the fixes&lt;/h2&gt;

&lt;p&gt;Having written these patches, confirmed that they fixed the problem, and reaching what I thought was a good enough consensus that they were the right approach, It seemed to me that the only thing left was to test them thoroughly, and to have them merged and released.&lt;/p&gt;

&lt;p&gt;What followed was a longer and harder process than I expected - a process which is still ongoing. Part 2 of this post will go into the details of how I managed to have some of those patches released, and what still remains to merge the others.&lt;/p&gt;

&lt;p&gt;The situation today is that the patch for issue 3 (see above) was merged in &lt;a href=&quot;https://gitlab.gnome.org/GNOME/dconf/merge_requests/1&quot;&gt;this pull request&lt;/a&gt;, along with a subsequent &lt;a href=&quot;https://gitlab.gnome.org/GNOME/dconf/merge_requests/5&quot;&gt;follow up pull request&lt;/a&gt;. These changes were released in GNOME 3.30 in 2018-09, and it appears that they were enough to solve the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xkb_keymap_ref&lt;/code&gt; crash, which &lt;a href=&quot;https://gitlab.gnome.org/GNOME/mutter/issues/76&quot;&gt;hasn’t been reopened since&lt;/a&gt;. I’ve just &lt;a href=&quot;https://gitlab.gnome.org/GNOME/dconf/merge_requests/3&quot;&gt;merged the pull request&lt;/a&gt; to solve issue 1, which is now on track to be released in GNOME 3.36 in 2020-03. Issue 2 is addressed by &lt;a href=&quot;https://gitlab.gnome.org/GNOME/dconf/merge_requests/2&quot;&gt;another pull request&lt;/a&gt; which still requires some cleanups before it can be merged.&lt;/p&gt;

&lt;h2 id=&quot;reflection&quot;&gt;Reflection&lt;/h2&gt;

&lt;p&gt;The original intermittent crash (or at least one of them) remained present for many months and caused me (and probably others) great annoyance. It was eventually fixed separately from my adventures with DConf. I don’t know exactly when, how, or by who, but I stopped experiencing it I think after the release of GNOME 3.26.&lt;/p&gt;

&lt;p&gt;I hope that when all these fixes to DConf are released, and running gnome-shell in valgrind works without issue, that debugging similar problems is easier than it was when I experienced them. I’m glad that in this process I solved various other issues in GNOME that had been difficult to debug and had significantly detracted from the experience of many of its users.&lt;/p&gt;

&lt;p&gt;Besides that, I’m glad to have been through this mad goose chase, and to have learned everything that I needed to learn along the way. Much of that knowledge and experience has been useful to me in other ways since.&lt;/p&gt;

&lt;h2 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h2&gt;

&lt;p&gt;Thankyou to &lt;a href=&quot;http://ptomato.name/&quot;&gt;Philip Chimento (ptomato)&lt;/a&gt;, &lt;a href=&quot;https://gitlab.gnome.org/desrt&quot;&gt;Allison Karlitskaya (desrt)&lt;/a&gt;, &lt;a href=&quot;https://tecnocode.co.uk/&quot;&gt;Philip Withnall (pwithnall)&lt;/a&gt;, and &lt;a href=&quot;https://blogs.gnome.org/mclasen/&quot;&gt;Mathias Clasen (mclasen)&lt;/a&gt; for the help and encouragement they gave me during this process. I couldn’t have done it without them.&lt;/p&gt;</content><author><name></name></author><category term="blogging" /><category term="gnome" /><category term="dconf" /><summary type="html">There is a nasty sort of bug that can occur in languages without memory safety - bugs where memory is accessed incorrectly. There are a few reasons why these bugs are nasty, worse than many other types of bugs: The consequences are often severe (usually the entire process crashes, or worse behaves unpredictably). They often create security vulnerabilities. They are difficult to debug. The symptoms may appear intermittently, and may manifest far away from the cause.</summary></entry><entry><title type="html">I made a blog!</title><link href="https://www.danielplayfaircal.com/blogging/2019/12/22/i-made-a-blog.html" rel="alternate" type="text/html" title="I made a blog!" /><published>2019-12-22T13:54:43+11:00</published><updated>2019-12-22T13:54:43+11:00</updated><id>https://www.danielplayfaircal.com/blogging/2019/12/22/i-made-a-blog</id><content type="html" xml:base="https://www.danielplayfaircal.com/blogging/2019/12/22/i-made-a-blog.html">&lt;p&gt;For a long time I’ve toyed with the idea of making a blog. I’ve wanted somewhere to write my thoughts down and make them accessible to the world. At the least, that means I get an excuse to organise them and write them down, as a sort of personal reflection. I expect that that will be enough to make this worthwhile.&lt;/p&gt;

&lt;p&gt;Whilst it remains to be seen what I will end up putting here, I have a few ideas for topics:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;My work on &lt;a href=&quot;https://gitlab.gnome.org/GNOME/dconf&quot;&gt;DConf&lt;/a&gt;, a configuration data store for GNOME&lt;/li&gt;
  &lt;li&gt;My work on &lt;a href=&quot;https://github.com/respond-framework/rudy&quot;&gt;Rudy&lt;/a&gt;, a library for MVC Redux based apps&lt;/li&gt;
  &lt;li&gt;Learnings and experiences about writing software&lt;/li&gt;
  &lt;li&gt;Hacking open source software to make it work on my devices&lt;/li&gt;
  &lt;li&gt;Reviews of things&lt;/li&gt;
  &lt;li&gt;Politics and social issues&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I must give credit to Drew DeVault for giving me a little extra motivation to do this in the form of a &lt;a href=&quot;https://drewdevault.com/make-a-blog&quot;&gt;$20 bribe&lt;/a&gt; to readers of his blog who start their own open source hosted tech blog. It remains to be seen if I manage to write a substantive post about tech before the budget runs out, or if he sufficiently approves of my writing. I’ve been inspired by his contributions to open source software and the discourse around it.&lt;/p&gt;

&lt;p&gt;So if you find yourself reading this for any reason, I say hello, and I hope you find something of interest to you.&lt;/p&gt;</content><author><name></name></author><category term="blogging" /><summary type="html">For a long time I’ve toyed with the idea of making a blog. I’ve wanted somewhere to write my thoughts down and make them accessible to the world. At the least, that means I get an excuse to organise them and write them down, as a sort of personal reflection. I expect that that will be enough to make this worthwhile.</summary></entry></feed>